<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Nobodyknows&#43; 2.5</title>
    <link>http://lynchwong.com/index.xml</link>
    <description>Recent content on Nobodyknows&#43; 2.5</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 13 Jan 2017 23:50:22 +0800</lastBuildDate>
    <atom:link href="http://lynchwong.com/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>更新</title>
      <link>http://lynchwong.com/2017/01/%E6%9B%B4%E6%96%B0/</link>
      <pubDate>Fri, 13 Jan 2017 23:50:22 +0800</pubDate>
      
      <guid>http://lynchwong.com/2017/01/%E6%9B%B4%E6%96%B0/</guid>
      <description>&lt;p&gt;上篇博客去年8月底写完就没再更了，一直在忙其它的事情。
&lt;/p&gt;

&lt;!-- toc --&gt;

&lt;h1 id=&#34;最近&#34;&gt;最近&lt;/h1&gt;

&lt;p&gt;去年5月之前是基本每天晚上跑步1小时，所以时间还是比较充裕的，写博客的时间就比较多。5月之后把重心放在了健身上，除了跑步，还有力量训练。时间安排上基本是先力量训练1到1个半小时，然后再跑步半小时，结束之后还要弄吃的，包括第二天的午餐。吃完弄完再洗漱，这样算下来总时间基本在3小时左右。所以按照我平常的作息，3小时基本都在晚上11点左右了，必然没时间再搞其它的事情了。&lt;/p&gt;

&lt;p&gt;10月国庆回来之后一直在忙工作上的事情，改项目的架构，做新的项目。直到最近才有时间来弄博客，首先是换了博客引擎，从 &lt;strong&gt;Hexo&lt;/strong&gt; 换成了 &lt;strong&gt;Hugo&lt;/strong&gt;。然后整理了下原来的博文，只完成了部分，之后会继续整理。&lt;a href=&#34;http://lynchwong.github.io/&#34;&gt;老博客&lt;/a&gt; 还是在的，只是不能通过 &lt;a href=&#34;http://lynchwong.com&#34;&gt;http://lynchwong.com&lt;/a&gt; 域名访问了。老博客地址 &lt;a href=&#34;http://lynchwong.github.io/&#34;&gt;http://lynchwong.github.io/&lt;/a&gt;。缓存原因可能跳不过去(也有可能是我域名解析没弄好)，会跳到现在的博客，换个浏览器试试。不过没关系，老博客的文章我都转到现在这个博客上了，而且老博客也一直托管在 &lt;strong&gt;GitHub&lt;/strong&gt; 上的，没有删掉，去我 &lt;strong&gt;GitHub&lt;/strong&gt; 上随时都可以看到。老博客就停止更新了，之后的文章都在这个博客上。其实域名没有变，对其他人来说就相当于换了个界面而已。&lt;/p&gt;

&lt;p&gt;新博客有一个问题就是 &lt;strong&gt;&lt;a href=&#34;http://lynchwong.com/categories/&#34;&gt;Categories&lt;/a&gt;&lt;/strong&gt; 里面中文被百分号编码了，现在还没解决，还没找到在哪里改。&lt;/p&gt;

&lt;p&gt;接下来就回顾下2016，计划下2017。&lt;/p&gt;

&lt;h1 id=&#34;2016&#34;&gt;2016&lt;/h1&gt;

&lt;h2 id=&#34;运动&#34;&gt;运动&lt;/h2&gt;

&lt;p&gt;唯运动与美食不可辜负。运动和美食可以换成其它的，这种类似的语言网上流传的太多，套路，都是套路。但是我觉得这句没有什么问题，反映了一种生活态度，而这种态度我觉得是正确的。&lt;/p&gt;

&lt;p&gt;但是大部分的人的态度都是美食不可辜负，而完全没有运动。这也没什么错，只要能保持身体健康，对自己的身材满意就好。大家都知道这是不可能的，周围有两个同学已经出现腰肌劳损了；除此之外，大部分同学的身材也是一年不如一年。特别是像我们这种长时间坐在电脑前面编程的程序猿，8小时以上的静坐工作。回家以后不是继续在电脑前面玩游戏、看视频，就是躺尸在床上什么都不干。&lt;/p&gt;

&lt;p&gt;保持身体健康，保持身材完美除了运动还有什么方法？现在开始运动，强身健体，等你老了少去医院少吃药，也是给你的下一代减压了。现在去健身房花的钱比起以后去医院花的钱要少的多，这笔帐我想谁都会算。&lt;/p&gt;

&lt;p&gt;生命在于运动。&lt;/p&gt;

&lt;h3 id=&#34;跑步&#34;&gt;跑步&lt;/h3&gt;

&lt;p&gt;从15年4月开始跑步到现在，差不多两年的时间，总共跑了3246公里，16年就跑了1938.88公里。在 &lt;strong&gt;&lt;a href=&#34;https://www.endomondo.com/home&#34;&gt;Endomondo&lt;/a&gt;&lt;/strong&gt; 的 &lt;strong&gt;You VS the Year&lt;/strong&gt; 的挑战中排名6359。这些数字并不代表什么，但是看起来还是挺有成就感的。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://lynchwong.com/img/Update/1.png&#34; alt=&#34;alt text&#34; /&gt;
&lt;img src=&#34;http://lynchwong.com/img/Update/2.png&#34; alt=&#34;alt text&#34; /&gt;&lt;/p&gt;

&lt;p&gt;去年的计划是想去跑一场马拉松的，研究了很多跑步的知识。有计划的学习和训练，想着之后参加杭马。有段时间跑步挺疯狂的，一天两跑，早上5点起跑个10公里，晚上有时候也跑，周末有时候还去跑个半马。为了跑步还买了 &lt;strong&gt;Garmin Fenix 3&lt;/strong&gt;，买了心率带，还有些跑步装备。即使下雨也会跑，所以跑废了两副耳机。&lt;/p&gt;

&lt;p&gt;后来健身开始就跑的少了，主要以5公里为主，跑量基本少了大半。如果不健身，以跑步为主，说不定已经跑了场马拉松了，16年也能跑到2500公里。&lt;/p&gt;

&lt;h3 id=&#34;健身&#34;&gt;健身&lt;/h3&gt;

&lt;p&gt;后来我把重心放在了健身上面，但是没有放弃跑步。只是跑的比以前少些了。偶尔空闲的时候我还是会去跑10公里，或者长距离慢跑下。两到三天不跑步就会浑身难受，跑习惯了不去跑就是这样，不跑总觉得哪里不对劲。&lt;/p&gt;

&lt;p&gt;之所以把重心放在健身上面是因为，跑步跑久了对我这种体型的人来说是增肥的。大部分人刚开始跑步的时候减脂效果挺好，但是时间久了就没什么效果。到最后就是瘦的人会增重，胖的人会瘦下来；但绝不会让你线条优美，肌肉有型，前凸后翘，但对心肺是挺好的。另一方面跑步让我食欲大增，每次跑完都很饿，这种饥饿感能延续到第二天，总是想吃。&lt;/p&gt;

&lt;p&gt;我对跑步没有别的诉求，跑步对于我来说就是一场修行。喜欢跑步时的那份独处，审视自己的内心，思考、回顾一下当天，跑完压力也没了。&lt;/p&gt;

&lt;p&gt;所以5月份开始就侧重于健身，开始学习各种健身知识和关于吃的知识。主要是在家健身，一副哑铃、一张瑜伽垫、一个引体向上杠，这就是我的装备了。跟着 &lt;strong&gt;Keep&lt;/strong&gt; 做课程，一直做到现在，有些课程还不错，渐渐发现已经没有课程可以满足我的需求了，之后只能再往上加重量和强度了。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://lynchwong.com/img/Update/3.png&#34; alt=&#34;alt text&#34; /&gt;
&lt;img src=&#34;http://lynchwong.com/img/Update/4.png&#34; alt=&#34;alt text&#34; /&gt;&lt;/p&gt;

&lt;p&gt;到9月份的时候肌肉线条已经比较明显了，只是围度还不够大而已。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://lynchwong.com/img/Update/5.png&#34; alt=&#34;alt text&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;饮食&#34;&gt;饮食&lt;/h3&gt;

&lt;p&gt;三分练，七分吃。对于健身的人来说，怎么吃，吃什么，吃多少永远都是个难题，特别是一些刚开始注意饮食的健身人士。而这句话也突出了吃的重要性，会练还要会吃才是真的达人，如果还会做那就是大神了。&lt;/p&gt;

&lt;p&gt;首先就要了解的就是三大营养物质了，每种营养物质的热量，哪些食物含有这些营养物质。是想要增肌还是要减肥，然后计算热量的摄入和支出。根据热量来计算每种营养物质的摄入量，然后具体到每一种食物，然后将每种食物定量到每一餐。尽量采用少食多餐的饮食习惯，最好一天5、6餐。&lt;/p&gt;

&lt;p&gt;去年有一个多月是自己做健身餐吃，感觉吃的很健康、很卫生。卖相和味道就不说了，两个字评价：熟的。为了弄吃的，还买了个烤箱。挺方便的，烤鸡胸肉、烤三文鱼、烤吐司都挺好吃的。今年再继续研究怎么做吃的，烤箱功能很多，很多还没用到呢。&lt;/p&gt;

&lt;h1 id=&#34;2017&#34;&gt;2017&lt;/h1&gt;

&lt;h2 id=&#34;运动-1&#34;&gt;运动&lt;/h2&gt;

&lt;p&gt;17年的重点还是健身和饮食，当然跑步还是会继续。我就是停不下来啊，无法放弃跑步。&lt;/p&gt;

&lt;p&gt;今年的跑量应该会在1000公里左右吧，马拉松什么的已经不是重点了。&lt;/p&gt;

&lt;p&gt;健身的目标是今年增肌到70KG，现在已经60KG了。由于本身身材矮小、瘦弱，模版已经在那里了，我感觉70KG已经是极限了。好多人说既然不高，还健身干嘛？我只想说本来就不高，没什么优势，身材要是还不好那不是药丸么。可能会挑个健身房，具体看今年的安排了。&lt;/p&gt;

&lt;p&gt;饮食目标就是研究各种健身餐，自己做给自己吃。熟悉各种食物的热量，学习各种食物的搭配。搞一份适合自己的健身菜单，要是有空，做个App，每天生成健身菜单，展示每种菜单的做法等等。&lt;/p&gt;

&lt;h1 id=&#34;学习&#34;&gt;学习&lt;/h1&gt;

&lt;p&gt;其实想学的东西还是挺多的，去年有过不少安排。不过有些不合适、有些不适用、有些实在是没时间再去弄了，只能砍掉了。&lt;/p&gt;

&lt;p&gt;今年还是要安排学习，重点放在算法吧。也想去搞搞AI、数据，呵呵哒。&lt;/p&gt;

&lt;h1 id=&#34;博客&#34;&gt;博客&lt;/h1&gt;

&lt;p&gt;博客还是要坚持更新，争取每周一更吧。各个方面都，技术、运动、学习、饮食等等。主要还是针对自己的，做些记录、备忘。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>UILabel 使用 Autolayout 自动换行的BUG</title>
      <link>http://lynchwong.com/2016/08/uilabel-%E4%BD%BF%E7%94%A8-autolayout-%E8%87%AA%E5%8A%A8%E6%8D%A2%E8%A1%8C%E7%9A%84bug/</link>
      <pubDate>Fri, 26 Aug 2016 10:29:18 +0000</pubDate>
      
      <guid>http://lynchwong.com/2016/08/uilabel-%E4%BD%BF%E7%94%A8-autolayout-%E8%87%AA%E5%8A%A8%E6%8D%A2%E8%A1%8C%E7%9A%84bug/</guid>
      <description>&lt;p&gt;之前有一篇 Blog 写的就是关于 UILabel 自动换行的内容，只不过不是通过代码计算，而是使用 xib、storyboard、AutoLayout 来自动换行。
&lt;/p&gt;

&lt;p&gt;最近貌似产生了一个BUG，最近做界面的时候按照这种方式自动换行的时候有些瑕疵，而之前的界面没有产生这个BUG。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://lynchwong.com/img/UILabelBUG/1.png&#34; alt=&#34;alt text&#34; /&gt;&lt;/p&gt;

&lt;p&gt;BUG已经在图中标注出来了，可以明显看到 UILabel 的那个高度跟我们期望的不一样。后来在排查BUG的时候，我用代码计算的 &lt;strong&gt;&amp;ldquo;VOA常速新闻:特朗普不担心缺少党内支持&amp;rdquo;&lt;/strong&gt; 的高度差不多是25.0左右。但是我用 Xcode 的 View UI Hierarchy 调试的时候高度是差不多50.0左右。所以可以断定的是 UILabel 进行了换行，但是我们是不需要换行的。另外，&lt;strong&gt;&amp;ldquo;永不退缩 Won&amp;rsquo;t Back Down (2012)&amp;rdquo;&lt;/strong&gt;也没有显示完全。&lt;/p&gt;

&lt;p&gt;排查 BUG 的过程还是比较蛋疼的，以为是图片影响了、或者是 Cell 重用影响了，代码逻辑看了好几遍都觉得没错。所以后来就 Google 了 &amp;ldquo;UILabel Xib Storyboard 自动换行&amp;rdquo;，找到了如下资料：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.csdn.net/lihogjun/article/details/30365269&#34;&gt; Autolayout下UILabel的自动换行实现 &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.cnblogs.com/allen123/p/4521746.html&#34;&gt; UILABEL AUTOLAYOUT自动换行 版本区别 &lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;所及基本上我就觉得是 &lt;strong&gt;preferredMaxLayoutWidth&lt;/strong&gt; 这个属性的问题，应该设置成跟 UILabel 的宽度一样。&lt;/p&gt;

&lt;p&gt;从图中可以看出我的 UILabel 的宽度是动态变化的，所以其实这个值应该也是变化的。但是我看我的 storyboard 里面设置的是 290.0，且是不变的。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://lynchwong.com/img/UILabelBUG/2.png&#34; alt=&#34;alt text&#34; /&gt;&lt;/p&gt;

&lt;p&gt;后来验证确实是这个的问题，其实界面是按照 6S 为基准做的，所以宽度是 375.0 减去左右边距和 30.0，应该是 345.0。所以这个 290.0 其实是不对的，以 6S 为标准应该是 345.0。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://lynchwong.com/img/UILabelBUG/3.png&#34; alt=&#34;alt text&#34; /&gt;&lt;/p&gt;

&lt;p&gt;所以按照这样的设置，在 6S 上没有图片的Cell显示应该是没问题的。截图如下：&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://lynchwong.com/img/UILabelBUG/4.png&#34; alt=&#34;alt text&#34; /&gt;&lt;/p&gt;

&lt;p&gt;但是箭头指的那里还是没有显示完全，后来设置成零就没有问题了，就没有深究了。截图如下：&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://lynchwong.com/img/UILabelBUG/5.png&#34; alt=&#34;alt text&#34; /&gt;&lt;/p&gt;

&lt;p&gt;这样看来就正常了。&lt;/p&gt;

&lt;p&gt;以上。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Fastlane - 示例</title>
      <link>http://lynchwong.com/2016/07/fastlane---%E7%A4%BA%E4%BE%8B/</link>
      <pubDate>Thu, 07 Jul 2016 23:08:32 +0000</pubDate>
      
      <guid>http://lynchwong.com/2016/07/fastlane---%E7%A4%BA%E4%BE%8B/</guid>
      <description>&lt;p&gt;&lt;strong&gt;说明：&lt;/strong&gt;之前把关于 &lt;code&gt;Fastlane&lt;/code&gt; 的工具集的文档简单翻译了下，翻译的比较糙。由于最近太忙了，没时间回去校对。之后有时间了也不会回去校对，so be it。
&lt;/p&gt;

&lt;p&gt;既然文档什么的都整完了，是时候写自己的 &lt;code&gt;lane&lt;/code&gt; 了。最近花了点时间研究了下各个工具，还是挺方便好用的。这里我把我自己的配置过程、以及一些自己的体会记录下来。&lt;/p&gt;

&lt;p&gt;首先说明下我的配置满足的需求：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;管理团队的证书，包括开发、发布、AdHoc&lt;/li&gt;
&lt;li&gt;能够上传App到 ITC(iTunes Connect) 进行审核&lt;/li&gt;
&lt;li&gt;能够使用 InHouse 证书打包，然后上传服务器&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Fastlane 是个工具集，里面所有的工具都可以单独使用。&lt;/p&gt;

&lt;h1 id=&#34;matchfile-文件&#34;&gt;&lt;strong&gt;Matchfile&lt;/strong&gt;文件：&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;git_url &amp;quot;https://LynchWong@bitbucket.org/LynchWong/eplayermatch.git&amp;quot;

type &amp;quot;development&amp;quot; # The default type, can be: appstore, adhoc or development

app_identifier &amp;quot;com.lynch.ePlayer&amp;quot; 
username &amp;quot;lynch.wong@me.com&amp;quot; # Your Apple Developer Portal username

# For all available options run `match --help`
# Remove the # in the beginning of the line to enable the other options
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;首先我直接进入到项目文件夹直接运行 &lt;code&gt;fastlane init&lt;/code&gt; 进行初始化，具体做了些什么工作参见 &lt;a href=&#34;https://github.com/fastlane/fastlane/blob/master/fastlane/docs/Guide.md&#34;&gt;这里&lt;/a&gt; 或者 &lt;a href=&#34;http://lynchwong.com/2016/06/11/Fastlane-Guide/&#34;&gt;这里&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;完成之后运行 &lt;code&gt;match init&lt;/code&gt; 来配置 &lt;code&gt;Match&lt;/code&gt;。这一步你需要一个私有的 Repository 。之后我运行了 &lt;code&gt;match development&lt;/code&gt;、&lt;code&gt;match adhoc&lt;/code&gt;、&lt;code&gt;match appstore&lt;/code&gt; 创建证书和配置文件。完成之后在 &lt;code&gt;fastlane&lt;/code&gt; 文件夹里面生成了 &lt;code&gt;Matchfile&lt;/code&gt; 文件，如上面所示，这里我做了一些小修改。&lt;/p&gt;

&lt;p&gt;关于 &lt;code&gt;Match&lt;/code&gt; 的说明，参考 &lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/match&#34;&gt;这里&lt;/a&gt; 或者 &lt;a href=&#34;http://lynchwong.com/2016/06/28/Fastlane-Match/&#34;&gt;这里&lt;/a&gt;。貌似 &lt;code&gt;Match&lt;/code&gt; 这里不对企业帐号的证书进行管理，我这里没有尝试。我用企业证书打包时是使用的 &lt;code&gt;cert&lt;/code&gt; 和 &lt;code&gt;sigh&lt;/code&gt;。&lt;/p&gt;

&lt;h1 id=&#34;appfile-文件&#34;&gt;&lt;strong&gt;Appfile&lt;/strong&gt;文件&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;app_identifier &amp;quot;com.lynch.ePlayer&amp;quot; # The bundle identifier of your app
apple_id &amp;quot;lynch.wong@me.com&amp;quot; # Your Apple email address
team_id &amp;quot;&amp;quot;  # Developer Portal Team ID

for_platform :ios do
    team_id &#39;&#39;
    for_lane :ent do
        app_identifier &#39;com.lynch.ePlayerEnt&#39;
        apple_id &#39;企业帐号&#39;
    end
end

# you can even provide different app identifiers, Apple IDs and team names per lane:
# More information: https://github.com/fastlane/fastlane/blob/master/fastlane/docs/Appfile.md
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;关于 &lt;code&gt;Appfile&lt;/code&gt; 文件可以参考 &lt;a href=&#34;https://github.com/fastlane/fastlane/blob/master/fastlane/docs/Appfile.md&#34;&gt;这里&lt;/a&gt; 。&lt;/p&gt;

&lt;p&gt;这里我对lane &lt;code&gt;ent&lt;/code&gt; 使用不同的 app_identifier 和 apple_id 。我这里的lane &lt;code&gt;ent&lt;/code&gt; 就是使用 InHouse 证书进行打包。&lt;/p&gt;

&lt;h1 id=&#34;fastfile-文件&#34;&gt;&lt;strong&gt;Fastfile&lt;/strong&gt;文件&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;    # coding: utf-8
    # Customise this file, documentation can be found here:
    # https://github.com/fastlane/fastlane/tree/master/fastlane/docs
    # All available actions: https://github.com/fastlane/fastlane/blob/master/fastlane/docs/Actions.md
    # can also be listed using the `fastlane actions` command

    # Change the syntax highlighting to Ruby
    # All lines starting with a # are ignored when running `fastlane`

    # If you want to automatically update fastlane if a new version is available:
    # update_fastlane

    # This is the minimum version number required.
    # Update this, if you use features of a newer version
    fastlane_version &amp;quot;1.97.2&amp;quot;

    default_platform :ios

    platform :ios do
        before_all do
            # ENV[&amp;quot;SLACK_URL&amp;quot;] = &amp;quot;https://hooks.slack.com/services/...&amp;quot;
            # cocoapods

        end

        desc &amp;quot;安装 FixCode 插件，禁用 Xcode 中的 Fix Issue 按钮。&amp;quot;
        lane :xcode do
            install_xcode_plugin(
                url: &amp;quot;https://github.com/fastlane/FixCode/releases/download/0.2.0/FixCode.xcplugin.zip&amp;quot;
            )
        end

        desc &amp;quot;使用 InHouse 证书打包。&amp;quot;
        lane :ent do
            produce(
                skip_itc: true
            )
            cert
            sigh(
                force: false
            )
            gym(
                workspace: &amp;quot;ePlayer.xcworkspace&amp;quot;,
                configuration: &amp;quot;Release&amp;quot;,
                scheme: &amp;quot;ePlayer&amp;quot;,
                silent: true,
                clean: false,
                output_directory: &amp;quot;IPA&amp;quot;,
                output_name: &amp;quot;ePlayerEnt.ipa&amp;quot;,
                use_legacy_build_api: true,
            )
        end

        desc &amp;quot;证书管理，不能管理企业帐号的证书。&amp;quot;
        lane :iosmatch do
            match(app_identifier: &amp;quot;com.lynch.ePlayer&amp;quot;, type: &amp;quot;development&amp;quot;, readonly: true)
            match(app_identifier: &amp;quot;com.lynch.ePlayer&amp;quot;, type: &amp;quot;adhoc&amp;quot;, readonly: true)
            match(app_identifier: &amp;quot;com.lynch.ePlayer&amp;quot;, type: &amp;quot;appstore&amp;quot;, readonly: true)
        end

        desc &amp;quot;Runs all the tests&amp;quot;
        lane :test do
            scan
        end

        desc &amp;quot;Submit a new Beta Build to Apple TestFlight&amp;quot;
        desc &amp;quot;This will also make sure the profile is up to date&amp;quot;
        lane :beta do
            # match(app_identifier: &amp;quot;com.lynch.ePlayer&amp;quot;, type: &amp;quot;appstore&amp;quot;, readonly: true) # more information: https://codesigning.guide
            gym(
                workspace: &amp;quot;ePlayer.xcworkspace&amp;quot;,
                configuration: &amp;quot;Release&amp;quot;,
                scheme: &amp;quot;ePlayer&amp;quot;,
                silent: true,
                clean: false,
                output_directory: &amp;quot;IPA&amp;quot;,
                output_name: &amp;quot;ePlayerTestFlight.ipa&amp;quot;,
                use_legacy_build_api: true,
            ) # Build your app - more options available
            pilot

            # sh &amp;quot;your_script.sh&amp;quot;
            # You can also use other beta testing services here (run `fastlane actions`)
        end

        desc &amp;quot;Deploy a new version to the App Store&amp;quot;
        lane :appstore do
            # match(type: &amp;quot;appstore&amp;quot;)
            # snapshot
            gym(scheme: &amp;quot;ePlayer&amp;quot;) # Build your app - more options available
            deliver(force: true)
            # frameit
        end

        # You can define as many lanes as you want

        after_all do |lane|
            # This block is called, only if the executed lane was successful

            # slack(
            #   message: &amp;quot;Successfully deployed new App Update.&amp;quot;
            # )
        end

        error do |lane, exception|
            # slack(
            #   message: exception.message,
            #   success: false
            # )
        end
    end


    # More information about multiple platforms in fastlane: https://github.com/fastlane/fastlane/blob/master/fastlane/docs/Platforms.md
    # All available actions: https://github.com/fastlane/fastlane/blob/master/fastlane/docs/Actions.md

    # fastlane reports which actions are used
    # No personal data is recorded. Learn more at https://github.com/fastlane/enhancer
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;lane-ent&#34;&gt;lane :ent&lt;/h2&gt;

&lt;p&gt;使用 InHouse 证书来打包。首先使用 produce，设置 skip_itc: true 不会在 ITC 上进行创建App，因为是企业帐号。然后使用 &lt;code&gt;cert&lt;/code&gt; 和 &lt;code&gt;sigh&lt;/code&gt; 进行签名创建证书(不使用 &lt;code&gt;Match&lt;/code&gt; 参考前面)。然后就是一些打包的设置。&lt;/p&gt;

&lt;h2 id=&#34;lane-xcode&#34;&gt;lane :xcode&lt;/h2&gt;

&lt;p&gt;安装 Xcode 的创建，主要是禁止使用 Xcode 来管理证书。至于为什么，参考 &lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/fastlane/docs/Codesigning&#34;&gt;这里&lt;/a&gt;，不再赘述。&lt;/p&gt;

&lt;h2 id=&#34;lane-iosmatch&#34;&gt;lane :iosmatch&lt;/h2&gt;

&lt;p&gt;主要用来获取安装相关证书，这里设置了 readonly: true，只会获取已经存在的签名和证书，而不会去生成一个新的。&lt;/p&gt;

&lt;p&gt;另外几个 lane 基本就是生成&lt;strong&gt;Fastfile&lt;/strong&gt;文件默认配置的。没什么好说的。我尝试运行了 &lt;code&gt;beta&lt;/code&gt; lane，主要就是多了 pilot，将打包好的上传到 TestFlight 进行测试。然而我发现 pilot 的几个命令也都是针对外部测试的，但是外部测试也是需要提交审核的，这个时间要多久我不知道。而内部测试也只有25个名额，每个名额10台设备。所以我觉得这个 pilot 没什么用啊，除此之外，另外一个工具 Boarding 进行配置的时候 Heroku 一直报错。所以我觉得还不如使用企业帐号打包，然后运行脚本(脚本这里就不提供了)，将IPA放到服务器提供下载安装。小团队还不如打包 AdHoc，不过使用 pilot 进行内部测试也很好。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;appstore&lt;/code&gt; lane 没有尝试，留到后面发版的时候使用。&lt;/p&gt;

&lt;h1 id=&#34;总结&#34;&gt;总结&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/fastlane/fastlane/blob/master/fastlane/docs/README.md&#34;&gt;这里还有很多文档可以参考&lt;/a&gt;，这些文档没有翻译。每个工具都可以使用 &lt;code&gt;--help&lt;/code&gt; 命令来查看帮助，很方便，看看就懂了。另外一点要提的就是你项目的 &lt;code&gt;.gitignore&lt;/code&gt;，可以参考 &lt;a href=&#34;https://github.com/fastlane/fastlane/blob/master/fastlane/docs/Gitignore.md&#34;&gt;这里&lt;/a&gt;。比如我打包的IPA是在项目文件夹里面的，所以我的 &lt;code&gt;.gitignore&lt;/code&gt; 还会忽略 &lt;code&gt;IPA&lt;/code&gt; 这个文件夹。&lt;/p&gt;

&lt;p&gt;翻译太花时间了，以后应该不会翻译了，以上。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Fastlane - Match</title>
      <link>http://lynchwong.com/2016/06/fastlane---match/</link>
      <pubDate>Tue, 28 Jun 2016 09:05:34 +0000</pubDate>
      
      <guid>http://lynchwong.com/2016/06/fastlane---match/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;说明：翻译的 &lt;code&gt;Match&lt;/code&gt; 的指南，&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/match&#34;&gt; 原文地址 &lt;/a&gt;。
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&#34;http://lynchwong.com/img/FastlaneMatch/match.png&#34; alt=&#34;alt text&#34; /&gt;&lt;/p&gt;

&lt;h1 id=&#34;match&#34;&gt;match&lt;/h1&gt;

&lt;p&gt;在你的团队之间使用 Git 轻松的同步你的证书和配置文件。&lt;/p&gt;

&lt;p&gt;iOS Code Signing 的新方法：在你的开发团队中共享一个 Code Signing identity，简化 CodeSigning 的设置工作，防止其它问题出现。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;match&lt;/code&gt; 是 &lt;a href=&#34;https://codesigning.guide&#34;&gt;https://codesigning.guide&lt;/a&gt; 概念的实现。&lt;code&gt;match&lt;/code&gt; 创建请求所有的证书和配置文件，然后存储在另外一个 Git Repository 中。团队中的每一个成员都可以访问这个 Repository，使用这些证书来 CodeSigning。&lt;code&gt;match&lt;/code&gt; 也会自动修复损坏的，过期的证书。&lt;code&gt;match&lt;/code&gt; 是在团队中共享签名证书的最简单方法。&lt;/p&gt;

&lt;h1 id=&#34;为什么使用match&#34;&gt;为什么使用match？&lt;/h1&gt;

&lt;p&gt;在开始使用 &lt;code&gt;match&lt;/code&gt; 前，确保已经阅读了 &lt;a href=&#34;https://codesigning.guide&#34;&gt;codesigning.guide&lt;/a&gt; 了。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;When deploying an app to the App Store, beta testing service or even installing it on a device, most development teams have separate code signing identities for every member. This results in dozens of profiles including a lot of duplicates.&lt;/p&gt;

&lt;p&gt;You have to manually renew and download the latest set of provisioning profiles every time you add a new device or a certificate expires. Additionally this requires spending a lot of time when setting up a new machine that will build your app.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;新方法：&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Share one code signing identity across your development team to simplify your setup and prevent code signing issues. What if there was a central place where your code signing identity and profiles are kept, so anyone in the team can access them during the build process?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;(这些我就不翻译了，就是说了一大堆团队成员之间证书管理混乱、各种revoke)&lt;/p&gt;

&lt;h2 id=&#34;为什么不让-xcode-处理这些&#34;&gt;为什么不让 Xcode 处理这些？&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;让要发生的事情都完全在你控制中&lt;/li&gt;
&lt;li&gt;你可以访问所有的证书和配置文件，这些都安全的存储在 Git 中&lt;/li&gt;
&lt;li&gt;在团队中共享一个 Code Signing identity，少量的证书和配置文件&lt;/li&gt;
&lt;li&gt;有时 Xcode 会 revoke(废除) 证书，打乱你的设置，导致项目构建失败&lt;/li&gt;
&lt;li&gt;比起 &lt;code&gt;自动&lt;/code&gt; 设置，通过显式设置配置文件，构建项目时我们更能预测会发生什么&lt;/li&gt;
&lt;li&gt;It just works™(这只是工作？ Xcode 只是有点作用，少了其它方面的考量？)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;match-为你做了什么工作&#34;&gt;&lt;code&gt;match&lt;/code&gt; 为你做了什么工作？&lt;/h2&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;center&#34;&gt;match&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;在团队成员中使用 Git 自动同步你的 iOS Keys 和 Profiles&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;处理所有繁重的事情，比如创建存储你的证书和配置文件&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;一分钟就能在新机器上设置好 Code Signing&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;能够与你的应用的多个的 Targets 和 Bundle identity 很好的工作&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;你能够完全控制 Git Repo，没有第三方的服务参与&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;Provisioning Profile 始终与正确的 Certificate 匹配&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;如果你当前账户过期了或者 Profiles 无效，很方便的重置你已经存在的 Profiles 和 Certificates&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;使用 &lt;code&gt;--force&lt;/code&gt; 选项能够自动更新你的 Provisioning Profiles，会包含你所有的设备&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;支持多个苹果账户和多个团队&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;与 &lt;a href=&#34;https://fastlane.tools&#34;&gt;fastlane&lt;/a&gt; 紧密集成，与 &lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/gym&#34;&gt;gym&lt;/a&gt; 等其它工具能够无缝衔接&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;更多关于概念上的信息，访问 &lt;a href=&#34;https://codesigning.guide&#34;&gt;codesigning.guide&lt;/a&gt;。&lt;/p&gt;

&lt;h1 id=&#34;安装&#34;&gt;安装&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;sudo gem install match
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;确保你已经安装了 Xcode 最新版本的命令行工具：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;xcode-select --install
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;使用&#34;&gt;使用&lt;/h1&gt;

&lt;h2 id=&#34;设置&#34;&gt;设置&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;创建一个&lt;strong&gt;新的私有 Git Repo&lt;/strong&gt;(比如在 &lt;a href=&#34;https://github.com/new&#34;&gt;GitHub&lt;/a&gt; 或者 &lt;a href=&#34;https://bitbucket.org/account/signin/?next=/repo/create&#34;&gt;BitBucket&lt;/a&gt; 上)命名为诸如 &lt;code&gt;certificates&lt;/code&gt; 这样的。&lt;strong&gt;重要：&lt;/strong&gt;确保 Repository 设置为了私有的。&lt;/li&gt;
&lt;li&gt;可选：创建一个&lt;strong&gt;新的，共享的 Apple Developer Portal 账户&lt;/strong&gt;，诸如 &lt;code&gt;office@company。com&lt;/code&gt; ，现在开始团队共享这个帐号(更多信息访问 &lt;a href=&#34;https://codesigning.guide&#34;&gt;codesigning.guide&lt;/a&gt;)。&lt;/li&gt;

&lt;li&gt;&lt;p&gt;在项目文件夹中运行如下命令开始使用 &lt;code&gt;match&lt;/code&gt; ：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;match init
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&#34;http://lynchwong.com/img/FastlaneMatch/match_init.gif&#34; alt=&#34;alt text&#34; /&gt;&lt;/p&gt;

&lt;p&gt;会要求你输入 Git Repo 的 URL。可以是 &lt;code&gt;https://&lt;/code&gt; 或者 &lt;code&gt;git&lt;/code&gt; URL。&lt;code&gt;match init&lt;/code&gt; 不会读取或者修改你的证书或者配置文件。&lt;/p&gt;

&lt;p&gt;会在你当前目录(或者在你的 &lt;code&gt;./fastlane/&lt;/code&gt; 文件夹)创建 &lt;code&gt;Matchfile&lt;/code&gt; 。&lt;/p&gt;

&lt;p&gt;示例内容(更多高级设置，查看 &lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/match#fastlane&#34;&gt;fastlane section&lt;/a&gt;)：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git_url &amp;quot;https://github.com/fastlane/fastlane/tree/master/certificates&amp;quot;

app_identifier &amp;quot;tools.fastlane.app&amp;quot;
username &amp;quot;user@fastlane.tools&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;重要-每个团队使用一个-git-分支&#34;&gt;&lt;strong&gt;重要：每个团队使用一个 Git 分支&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;match&lt;/code&gt; 也支持在一个 Repo 中为多个团队存储证书，通过使用不同的分支。如果你在多个团队中工作，确保你为每个团队设置了唯一的 &lt;code&gt;git_branch&lt;/code&gt; 参数值。&lt;code&gt;match&lt;/code&gt; 会自动为创建使用指定的分支。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;match(git_branch: &amp;quot;team1&amp;quot;, username: &amp;quot;user@team1.com&amp;quot;)
match(git_branch: &amp;quot;team2&amp;quot;, username: &amp;quot;user@team2.com&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;运行&#34;&gt;运行&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Before running match for the first time, you should consider clearing your existing profiles and certificates using the &lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/match#nuke&#34;&gt;match nuke command&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;在运行 &lt;code&gt;match init&lt;/code&gt; 之后，你可以运行如下的命令来生成新的证书和配置文件：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;match appstore
match development
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://lynchwong.com/img/FastlaneMatch/match_appstore_small.gif&#34; alt=&#34;alt text&#34; /&gt;&lt;/p&gt;

&lt;p&gt;这回创建新的证书和配置文件(如果需要)然后存储在你的 Git Repo 中。如果你之前运行 &lt;code&gt;match&lt;/code&gt; ，它会自动安装 Git Repo 里已经存在的 Profiles 。&lt;/p&gt;

&lt;p&gt;当 Certificates 和 Private keys 安装在 Keychain，Provisioning Profiles 安装在 &lt;code&gt;~/Library/MobileDevice/Provisioning Profiles&lt;/code&gt; 。&lt;/p&gt;

&lt;p&gt;使用如下命令获得更详细的输出：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;match --verbose
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;列出可用的选项：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;match --help
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;处理多个-targets&#34;&gt;处理多个 Targets&lt;/h3&gt;

&lt;p&gt;如果你有不同的 Bundle identifiers，多个 Targets，为它们的每一个调用 &lt;code&gt;match&lt;/code&gt; 。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;match appstore -a tools.fastlane.app
match appstore -a tools.fastlane.app.watchkitapp
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;你可以使用 &lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/fastlane&#34;&gt;fastlane&lt;/a&gt; 让这过程更简单点：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;lane :match do
    match(app_identifier: &amp;quot;com.krausefx.app1&amp;quot;, readonly: true)
    match(app_identifier: &amp;quot;com.krausefx.app2&amp;quot;, readonly: true)
    match(app_identifier: &amp;quot;com.krausefx.app3&amp;quot;, readonly: true)
end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;然后所有团队需要做的就是 &lt;code&gt;fastlane match&lt;/code&gt;，然后为所有 targets 的 keys、certs 和 profiles 都会同步。&lt;/p&gt;

&lt;h3 id=&#34;密码&#34;&gt;密码&lt;/h3&gt;

&lt;p&gt;当在一台新机器上第一次运行 &lt;code&gt;match&lt;/code&gt; ，会询问你 Git Repository 的密码。这是一个额外的安全措施：所有的文件都会被 OpenSSL 加密。请务必记住密码，当你在不同机器上运行 &lt;code&gt;match&lt;/code&gt; 的时候你会需要。&lt;/p&gt;

&lt;p&gt;使用环境变量来设置密码，使用 &lt;code&gt;MATCH_PASSWORD&lt;/code&gt; 。&lt;/p&gt;

&lt;h3 id=&#34;新机器&#34;&gt;新机器&lt;/h3&gt;

&lt;p&gt;在新机器上设置证书和配置文件，使用如下命令：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;match development
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;你也可以运行 &lt;code&gt;match&lt;/code&gt; 的是使用 &lt;code&gt;readonly&lt;/code&gt; 确保不会创建新的证书或者配置文件。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;match development --readonly
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;访问控制&#34;&gt;访问控制&lt;/h3&gt;

&lt;p&gt;使用 &lt;code&gt;match&lt;/code&gt; 的一个好处就是你允许团队成员可以访问 Code Signing Certificates，而不需要给每个成员访问 Developer Portal 的权限：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;运行 &lt;code&gt;match&lt;/code&gt; 在 Git Repo 中存储证书&lt;/li&gt;
&lt;li&gt;给开发人员授予访问 Git Repo 的权限，并给他们密码&lt;/li&gt;
&lt;li&gt;开发人员现在可以运行 &lt;code&gt;match&lt;/code&gt; 安装最新版本的 Code Signing Profile，所以他们可以直接构建签名应用程序，而不需要去访问 Developer Portal&lt;/li&gt;
&lt;li&gt;每次你运行 &lt;code&gt;match&lt;/code&gt; 更新 Profiles(比如 添加新设备)，所有的开发人员在运行 &lt;code&gt;match&lt;/code&gt; 时都会自动获取最新版本的 Profiles&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;如果你决定运行 &lt;code&gt;match&lt;/code&gt; 的时候不访问 Developer Portal，使用 &lt;code&gt;--readonly&lt;/code&gt; 选项，就不会询问你 Developer Portal 的密码。&lt;/p&gt;

&lt;p&gt;这个方法的优势就是团队中的人不会因为手误废除(revoke)了证书。另外推荐安装 &lt;a href=&#34;https://github.com/neonichu/FixCode&#34;&gt;FixCode Xcode Plugin&lt;/a&gt; 禁用 &lt;code&gt;Fix Issue&lt;/code&gt; 按钮。&lt;/p&gt;

&lt;h3 id=&#34;git-repo&#34;&gt;Git Repo&lt;/h3&gt;

&lt;p&gt;在第一次运行 &lt;code&gt;match&lt;/code&gt; 之后，你的 Git Repo 会包含两个目录：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;certs&lt;/code&gt; 文件夹包含所有的 Certificates 和它们的 Private Keys&lt;/li&gt;
&lt;li&gt;&lt;code&gt;profiles&lt;/code&gt; 文件夹包含所有的 Provisioning Profiles&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;除此之外，&lt;code&gt;match&lt;/code&gt; 会为你创建一个漂亮的 Repo &lt;code&gt;README.md&lt;/code&gt;，方便新的团队成员登船(入坑，哈哈，开玩笑)：&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://lynchwong.com/img/FastlaneMatch/github_repo.png&#34; alt=&#34;alt text&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;fastlane&#34;&gt;fastlane&lt;/h3&gt;

&lt;p&gt;添加 &lt;code&gt;match&lt;/code&gt; 到你的 &lt;code&gt;Fastfile&lt;/code&gt; ，使用 &lt;a href=&#34;https://fastlane.tools&#34;&gt;fastlane&lt;/a&gt; 自动获取最新版本的 Code Signing Certificates 。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;match(type: &amp;quot;appstore&amp;quot;)

match(git_url: &amp;quot;https://github.com/fastlane/fastlane/tree/master/certificates&amp;quot;,
  type: &amp;quot;development&amp;quot;)

match(git_url: &amp;quot;https://github.com/fastlane/fastlane/tree/master/certificates&amp;quot;,
  type: &amp;quot;adhoc&amp;quot;,
  app_identifier: &amp;quot;tools.fastlane.app&amp;quot;)

# `match` should be called before building the app with `gym`
gym
...
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;多个-targets&#34;&gt;多个 Targets&lt;/h3&gt;

&lt;p&gt;如果你的应用程序有多个 Targets(比如 Today Widget or WatchOS Extension)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;match(app_identifier: &amp;quot;tools.fastlane.app&amp;quot;, type: &amp;quot;appstore&amp;quot;)
match(app_identifier: &amp;quot;tools.fastlane.app.today_widget&amp;quot;, type: &amp;quot;appstore&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;match&lt;/code&gt; 甚至可以为所有的 Bundle identifiers 使用同一个 Git Repository 。&lt;/p&gt;

&lt;h2 id=&#34;设置-xcode-项目&#34;&gt;设置 Xcode 项目&lt;/h2&gt;

&lt;p&gt;为了确保 Xcode 为每一个 target 使用了正确的 Provisioning Profile，请不要为选择 Profile 的功能使用 &lt;code&gt;Automatic&lt;/code&gt; 。&lt;/p&gt;

&lt;p&gt;另外，推荐使用 &lt;a href=&#34;https://github.com/neonichu/FixCode&#34;&gt;FixCode Xcode Plugin&lt;/a&gt; 禁用 &lt;code&gt;Fix Issue&lt;/code&gt;按钮。&lt;code&gt;Fix Issue&lt;/code&gt; 按钮可以废除(revoke)你已经存在 Certificates，会使你的 Provisioning Profiles 无效。&lt;/p&gt;

&lt;h3 id=&#34;使用-fastlane-https-fastlane-tools-从命令行构建&#34;&gt;使用 &lt;a href=&#34;https://fastlane.tools&#34;&gt;fastlane&lt;/a&gt; 从命令行构建&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;match&lt;/code&gt; 会使用正确的 Provisioning Profiles 的 UUID 来自动填充环境变量，准备在你的 Xcode 项目中使用。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://lynchwong.com/img/FastlaneMatch/UDIDPrint.png&#34; alt=&#34;alt text&#34; /&gt;&lt;/p&gt;

&lt;p&gt;打开你的 target 设置，打开 &lt;code&gt;Provisioning Profile&lt;/code&gt; 选择 &lt;code&gt;Other&lt;/code&gt; ：&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://lynchwong.com/img/FastlaneMatch/XcodeProjectSettings.png&#34; alt=&#34;alt text&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Profile 环境变量以 &lt;code&gt;$(sigh_&amp;lt;bundle_identifier&amp;gt;_&amp;lt;profile_type&amp;gt;)&lt;/code&gt; 命名&lt;/p&gt;

&lt;p&gt;比如 &lt;code&gt;$(sigh_tools.fastlane.app_development)&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&#34;从-xcode-手动构建&#34;&gt;从 Xcode 手动构建&lt;/h3&gt;

&lt;p&gt;当你使用 Development Profile 安装应用程序到设备上的时候非常有用。&lt;/p&gt;

&lt;p&gt;你可以在 Xcode 项目中静态的选择正确的 Provisioning Profile(名字与 &lt;code&gt;Development tools.fastlane.app&lt;/code&gt; 匹配)。&lt;/p&gt;

&lt;h2 id=&#34;持续集成&#34;&gt;持续集成&lt;/h2&gt;

&lt;h3 id=&#34;访问-repo&#34;&gt;访问 Repo&lt;/h3&gt;

&lt;p&gt;为了让 CI 系统和 &lt;code&gt;match&lt;/code&gt; 工作，只需要让 CI 系统能够访问 Repo。通常你只需要将 CI 系统的 public ssh key 当做 deploy key 添加到你的 &lt;code&gt;match&lt;/code&gt; Repo 中，但由于你的 CI 系统可能已经使用 public ssh key 来访问代码的 Repo，&lt;a href=&#34;https://help.github.com/articles/error-key-already-in-use/&#34;&gt;那你就不能那么做了。&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;有些 Repo Hosts 可能允许你为不同的 Repo 使用相同的 deploy 可以，但是 GitHub 不允许。如果你的 Host 也是，不需要担心，只需要将 CI 的 public ssh key 当做 deploy key 添加到你的 &lt;code&gt;match&lt;/code&gt; Repo 中，然后滚动到&amp;rdquo;Encryption password&amp;rdquo;。&lt;/p&gt;

&lt;p&gt;大约有这几个方面：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;在你的 Repo Host 上创建新的帐号，对于你的 &lt;code&gt;match&lt;/code&gt; Repo 只有 read-only 的访问权限。&lt;a href=&#34;http://devcenter.bitrise.io/docs/adding-projects-with-submodules&#34;&gt;这里有描述。&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;有些 CI 允许你手动上传 Signing Credientials，但是这就意味着 profiles/keys/certs 每次改变你都要重新上传。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;这两种解决方法都不完美。两种方法需要你的权衡。看你是更在意设置额外的账户还是更在意证书的同步。&lt;/p&gt;

&lt;h3 id=&#34;加密密码&#34;&gt;加密密码&lt;/h3&gt;

&lt;p&gt;一旦你决定使用哪种方法，所有剩下要做的就是设置你加密的密码作为秘密的环境变量，命名为 &lt;code&gt;MATCH_PASSWORD&lt;/code&gt; 。&lt;code&gt;match&lt;/code&gt; 在运行的时候会带上这个参数。&lt;/p&gt;

&lt;h2 id=&#34;nuke&#34;&gt;Nuke&lt;/h2&gt;

&lt;p&gt;如果你从来不再以 Code Signing，并且 Apple Developer 账户有大量无效的，过期的，Xcode管理的 profiles／certificates，你可以使用 &lt;code&gt;match nuke&lt;/code&gt; 命令来废除你的 Certificates 和 Provisioning Profiles。不要担心，已经在 App Store 里可用的应用程序仍然会继续工作。在 &lt;code&gt;nuke&lt;/code&gt; 你的账户之后，通过 TestFlight 构建的 distributed 就不能再用了，所以你必需重新上传新的构建。在清理了你的账户之后，你将会从干净的状态开始，然后你就可以运行 &lt;code&gt;match&lt;/code&gt; 再次生成 Certificates 和 Profiles。&lt;/p&gt;

&lt;p&gt;对指定环境的 Certificates 和 Provisioning Profiles 废除：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;match nuke development
match nuke distribution
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://lynchwong.com/img/FastlaneMatch/match_nuke.gif&#34; alt=&#34;alt text&#34; /&gt;&lt;/p&gt;

&lt;p&gt;在删除 profiles / certificates 之前你必需确认。&lt;/p&gt;

&lt;h2 id=&#34;修改密码&#34;&gt;修改密码&lt;/h2&gt;

&lt;p&gt;修改你 Repo 的密码，加密和解密所有文件运行：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;match change_password
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;在你所有机器上下一次运行的时候会被询问新的密码。&lt;/p&gt;

&lt;h2 id=&#34;手动解密&#34;&gt;手动解密&lt;/h2&gt;

&lt;p&gt;如果你想手动解密文件：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;openssl aes-256-cbc -k &amp;quot;&amp;lt;password&amp;gt;&amp;quot; -in &amp;quot;&amp;lt;fileYouWantToDecryptPath&amp;gt;&amp;quot; -out &amp;quot;&amp;lt;decryptedFilePath&amp;gt;&amp;quot; -a -d
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;这个安全吗&#34;&gt;这个安全吗？&lt;/h1&gt;

&lt;p&gt;你的 Keys 和 Provisioning Profiles 都使用了 OpenSSL 和 密码进行加密。&lt;/p&gt;

&lt;p&gt;将 Private Keys 存储在 Git Repo 中第一次听起来倒胃口。我们进行了一次深层次的潜在安全问题的分析，然后得出如下结论：&lt;/p&gt;

&lt;h2 id=&#34;如果某人偷取了-private-key-会发生什么&#34;&gt;如果某人偷取了 Private Key 会发生什么？&lt;/h2&gt;

&lt;p&gt;如果攻击者有了你的 Certificate 和 Provisioning Profile，他们就可以使用跟你相同的 Bundle identifier 来签名应用。&lt;/p&gt;

&lt;p&gt;对于每种类型的 Profile，最糟糕的情况是什么？&lt;/p&gt;

&lt;h3 id=&#34;app-store-profiles&#34;&gt;App Store Profiles&lt;/h3&gt;

&lt;p&gt;只要不是苹果重新签名的 App Store Profile 就没有任何的用处。而获取重新签名的唯一方法就是提交应用进行审核(将会花7天的时候左右)。攻击者只能提交应用进行审核，如果他们也获得了访问你 iTunes Connect 的 凭证(credentials，帐号？密码？)(这个凭证没有存储在 Git 中，而是在你本地的 Keychain 中)。另外，每一次的构建上传、取消，甚至是你的应用进入审核阶段之前你都会收到通知邮件。&lt;/p&gt;

&lt;h3 id=&#34;development-and-ad-hoc-profiles&#34;&gt;Development and Ad Hoc Profiles&lt;/h3&gt;

&lt;p&gt;通常来说这些 Profiles 是无害的，因为它们签名的应用程序只能安装在小部分的设备上。为了新增设备，攻击者也会需要你的 Apple Developer Portal 的凭证(这个凭证没有存储在 Git 中，而是在你本地的 Keychain 中)。&lt;/p&gt;

&lt;h3 id=&#34;enterprise-profiles&#34;&gt;Enterprise Profiles&lt;/h3&gt;

&lt;p&gt;攻击者可以使用 In-House Profile 来签名应用程序然后分发给潜在的没有数量限制的设备。所有的这些都运行在你的公司名下，最终会导致苹果撤销你的 In-House 账户。然而可以很容易的废除(revoke)证书，然后远程的破坏所有设备上的这个 App 。&lt;/p&gt;

&lt;p&gt;因为 In-House Profile 潜在的危险性，所以我们决定不允许 &lt;code&gt;match&lt;/code&gt; 使用企业账户。&lt;/p&gt;

&lt;p&gt;总结一下：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;你可以完全控制 Git Repo，没有第三方服务的参与&lt;/li&gt;
&lt;li&gt;即使你的 Certificates 泄漏了，他们没有你的 iTunes Connect 登录凭证也无法引起任何损害&lt;/li&gt;
&lt;li&gt;&lt;code&gt;match&lt;/code&gt; 现在不支持 In-House Enterprise Profiles ，因为它们太难控制&lt;/li&gt;
&lt;li&gt;如果你使用 GitHub 或者 Bitbucket 我们强烈鼓励你开启所有访问 Certificates Repo 账户的两部验证&lt;/li&gt;
&lt;li&gt;&lt;code&gt;match&lt;/code&gt; 的所有的源码都开源在了 &lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/match&#34;&gt;Git Hub&lt;/a&gt; 上&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;fastlane-工具链&#34;&gt;&lt;code&gt;fastlane&lt;/code&gt; 工具链&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://fastlane.tools&#34;&gt; &lt;code&gt;fastlane&lt;/code&gt; &lt;/a&gt;：自动化构建和发布你 iOS 和 Android 应用程序的最简单方法&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/deliver&#34;&gt; &lt;code&gt;deliver&lt;/code&gt; &lt;/a&gt;：将你的应用、截图、元数据上传到App Store&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/snapshot&#34;&gt; &lt;code&gt;snapshot&lt;/code&gt; &lt;/a&gt;：将你iOS应用在每一种设备上进行本地化自动截图&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/frameit&#34;&gt; &lt;code&gt;frameit&lt;/code&gt; &lt;/a&gt;：快速将你的截图放入到适合的设备框中&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/pem&#34;&gt; &lt;code&gt;pem&lt;/code&gt; &lt;/a&gt;：自动生成和更新你的推送通知证书&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/produce&#34;&gt; &lt;code&gt;produce&lt;/code&gt; &lt;/a&gt;：使用命令行工具在 iTunes Connect 和 Dev Portal 上创建新的iOS应用&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/cert&#34;&gt; &lt;code&gt;cert&lt;/code&gt; &lt;/a&gt;：自动创建和维护iOS的 code signing certificates&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/spaceship&#34;&gt; &lt;code&gt;spaceship&lt;/code&gt; &lt;/a&gt;：一个 Ruby library，自动连接 Apple Dev Center 和 iTunes Connect&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/pilot&#34;&gt; &lt;code&gt;pilot&lt;/code&gt; &lt;/a&gt;：管理你TestFlight测试人员的最好方式，使用终端构建&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/boarding&#34;&gt; &lt;code&gt;boarding&lt;/code&gt; &lt;/a&gt;：邀请你 TestFlight 的beta测试人员的最简单方式&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/gym&#34;&gt; &lt;code&gt;gym&lt;/code&gt; &lt;/a&gt;：构建你iOS应用程序&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/scan&#34;&gt; &lt;code&gt;scan&lt;/code&gt; &lt;/a&gt;：为你iOS和Mac应用运行测试的最简单方法&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/supply&#34;&gt; &lt;code&gt;supply&lt;/code&gt; &lt;/a&gt;：将你的Android应用和数据上传到 Google Play&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/screengrab&#34;&gt; &lt;code&gt;screengrab&lt;/code&gt; &lt;/a&gt;：Android版&lt;code&gt;snapshot&lt;/code&gt;，一样的功能&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;帮助&#34;&gt;帮助&lt;/h1&gt;

&lt;p&gt;请提交 issue 到 GitHub，并提供你关于设置的信息。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Fastlane - Scan</title>
      <link>http://lynchwong.com/2016/06/fastlane---scan/</link>
      <pubDate>Tue, 28 Jun 2016 09:05:20 +0000</pubDate>
      
      <guid>http://lynchwong.com/2016/06/fastlane---scan/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;说明：翻译的 &lt;code&gt;Scan&lt;/code&gt; 的指南，&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/scan&#34;&gt; 原文地址 &lt;/a&gt;。
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&#34;http://lynchwong.com/img/FastlaneScan/scan.png&#34; alt=&#34;alt text&#34; /&gt;&lt;/p&gt;

&lt;h1 id=&#34;scan&#34;&gt;scan&lt;/h1&gt;

&lt;p&gt;运行你 iOS 和 Mac 应用程序测试的最简单方法&lt;/p&gt;

&lt;p&gt;&lt;code&gt;scan&lt;/code&gt; 能够在模拟器或者连接的设备上运行你 iOS 和 Mac 应用程序的测试。&lt;/p&gt;

&lt;h1 id=&#34;scan-是什么&#34;&gt;scan 是什么？&lt;/h1&gt;

&lt;p&gt;&lt;img src=&#34;http://lynchwong.com/img/FastlaneScan/68747470733a2f2f7062732e7477696d672e636f6d2f6d656469612f43555263457075576f4141724533642e706e673a6c61726765.png&#34; alt=&#34;alt text&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;scan-之前&#34;&gt;&lt;code&gt;scan&lt;/code&gt; 之前&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;xcodebuild \
    -workspace MyApp.xcworkspace \
    -scheme &amp;quot;MyApp&amp;quot; \
    -sdk iphonesimulator \
    -destination &#39;platform=iOS Simulator,name=iPhone 6,OS=8.1&#39; \
    test
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;输出看起来像这样：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;/Users/felixkrause/Library/Developer/Xcode/DerivedData/Example-fhlmxikmujknefgidqwqvtbatohi/Build/Intermediates/ArchiveIntermediates/Example/IntermediateBuildFilesPath/Example.build/Release-iphoneos/Example.build/Objects-normal/arm64/main.o Example/main.m normal arm64 objective-c com.apple.compilers.llvm.clang.1_0.compiler
    cd /Users/felixkrause/Developer/fastlane/gym/example/cocoapods
    export LANG=en_US.US-ASCII
    export PATH=&amp;quot;/Applications/Xcode-beta.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/usr/bin:/Applications/Xcode-beta.app/Contents/Developer/usr/bin:/Users/felixkrause/.rvm/gems/ruby-2.2.0/bin:/Users/felixkrause/.rvm/gems/ruby-2.2.0@global/bin:/Users/felixkrause/.rvm/rubies/ruby-2.2.0/bin:/Users/felixkrause/.rvm/bin:/usr/local/heroku/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin&amp;quot;
    /Applications/Xcode-beta.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang -x objective-c -arch arm64 -fmessage-length=126 -fdiagnostics-show-note-include-stack -fmacro-backtrace-limit=0 -fcolor-diagnostics -std=gnu99 -fobjc-arc -fmodules -gmodules -fmodules-cache-path=/Users/felixkrause/Library/Developer/Xcode/DerivedData/ModuleCache -fmodules-prune-interval=86400 -fmodules-prune-after=345600 -fbuild-session-file=/Users/felixkrause/Library/Developer/Xcode/DerivedData/ModuleCache/Session.modulevalidation -fmodules-validate-once-per-build-session -Wnon-modular-include-in-framework-module -Werror=non-modular-include-in-framework-module -Wno-trigraphs -fpascal-strings -Os -fno-common -Wno-missing-field-initializers -Wno-missing-prototypes -Werror=return-type -Wunreachable-code -Wno-implicit-atomic-properties -Werror=deprecated-objc-isa-usage -Werror=objc-root-class -Wno-arc-repeated-use-of-weak -Wduplicate-method-match -Wno-missing-braces -Wparentheses -Wswitch -Wunused-function -Wno-unused-label -Wno-unused-parameter -Wunused-variable -Wunused-value -Wempty-body -Wconditional-uninitialized -Wno-unknown-pragmas -Wno-shadow -Wno-four-char-constants -Wno-conversion -Wconstant-conversion -Wint-conversion -Wbool-conversion -Wenum-conversion -Wshorten-64-to-32 -Wpointer-sign -Wno-newline-eof -Wno-selector -Wno-strict-selector-match -Wundeclared-selector -Wno-deprecated-implementations -DCOCOAPODS=1 -DNS_BLOCK_ASSERTIONS=1 -DOBJC_OLD_DISPATCH_PROTOTYPES=0 -isysroot /Applications/Xcode-beta.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS9.0.sdk -fstrict-aliasing -Wprotocol -Wdeprecated-declarations -miphoneos-version-min=9.0 -g -fvisibility=hidden -Wno-sign-conversion -fembed-bitcode -iquote /Users/felixkrause/Library/Developer/Xcode/DerivedData/Example-fhlmxikmujknefgidqwqvtbatohi/Build/Intermediates/ArchiveIntermediates/Example/IntermediateBuildFilesPath/Example.build/Release-iphoneos/Example.build/ExampleProductName-generated-files.hmap -I/Users/felixkrause/Library/Developer/Xcode/DerivedData/Example-fhlmxikmujknefgidqwqvtbatohi/Build/Intermediates/ArchiveIntermediates/Example/IntermediateBuildFilesPath/Example.build/Release-iphoneos/Example.build/ExampleProductName-own-target-headers.hmap -I/Users/felixkrause/Library/Developer/Xcode/DerivedData/Example-fhlmxikmujknefgidqwqvtbatohi/Build/Intermediates/ArchiveIntermediates/Example/IntermediateBuildFilesPath/Example.build/Release-iphoneos/Example.build/ExampleProductName-all-target-headers.hmap -iquote /Users/felixkrause/Library/Developer/Xcode/DerivedData/Example-fhlmxikmujknefgidqwqvtbatohi/Build/Intermediates/ArchiveIntermediates/Example/IntermediateBuildFilesPath/Example.build/Release-iphoneos/Example.build/ExampleProductName-project-headers.hmap -I/Users/felixkrause/Library/Developer/Xcode/DerivedData/Example-fhlmxikmujknefgidqwqvtbatohi/Build/Intermediates/ArchiveIntermediates/Example/BuildProductsPath/Release-iphoneos/include -I/Users/felixkrause/Developer/fastlane/gym/example/cocoapods/Pods/Headers/Public -I/Users/felixkrause/Developer/fastlane/gym/example/cocoapods/Pods/Headers/Public/HexColors -I/Users/felixkrause/Library/Developer/Xcode/DerivedData/Example-fhlmxikmujknefgidqwqvtbatohi/Build/Intermediates/ArchiveIntermediates/Example/IntermediateBuildFilesPath/Example.build/Release-iphoneos/Example.build/DerivedSources/arm64 -I/Users/felixkrause/Library/Developer/Xcode/DerivedData/Example-fhlmxikmujknefgidqwqvtbatohi/Build/Intermediates/ArchiveIntermediates/Example/IntermediateBuildFilesPath/Example.build/Release-iphoneos/Example.build/DerivedSources -F/Users/felixkrause/Library/Developer/Xcode/DerivedData/Example-fhlmxikmujknefgidqwqvtbatohi/Build/Intermediates/ArchiveIntermediates/Example/BuildProductsPath/Release-iphoneos -isystem /Users/felixkrause/Developer/fastlane/gym/example/cocoapods/Pods/Headers/Public -isystem /Users/felixkrause/Developer/fastlane/gym/example/cocoapods/Pods/Headers/Public/HexColors -MMD -MT dependencies -MF /Users/felixkrause/Library/Developer/Xcode/DerivedData/Example-fhlmxikmujknefgidqwqvtbatohi/Build/Intermediates/ArchiveIntermediates/Example/IntermediateBuildFilesPath/Example.build/Release-iphoneos/Example.build/Objects-normal/arm64/main.d --serialize-diagnostics /Users/felixkrause/Library/Developer/Xcode/DerivedData/Example-fhlmxikmujknefgidqwqvtbatohi/Build/Intermediates/ArchiveIntermediates/Example/IntermediateBuildFilesPath/Example.build/Release-iphoneos/Example.build/Objects-normal/arm64/main.dia -c /Users/felixkrause/Developer/fastlane/gym/example/cocoapods/Example/main.m -o /Users/felixkrause/Library/Developer/Xcode/DerivedData/Example-fhlmxikmujknefgidqwqvtbatohi/Build/Intermediates/ArchiveIntermediates/Example/IntermediateBuildFilesPath/Example.build/Release-iphoneos/Example.build/Objects-normal/arm64/main.o
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;你可能会想要使用像 &lt;a href=&#34;https://github.com/supermarin/xcpretty&#34;&gt;xcpretty&lt;/a&gt; 这样的工具，像这样：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;set -o pipefail &amp;amp;&amp;amp;
    xcodebuild \
        -workspace MyApp.xcworkspace \
        -scheme &amp;quot;MyApp&amp;quot; \
        -sdk iphonesimulator \
        -destination &#39;platform=iOS Simulator,name=iPhone 6,OS=8.1&#39; \
        test \
    | xcpretty \
        -r &amp;quot;html&amp;quot; \
        -o &amp;quot;tests.html&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;使用-scan&#34;&gt;使用 &lt;code&gt;scan&lt;/code&gt;&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;scan
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;为什么使用-scan&#34;&gt;为什么使用 &lt;code&gt;scan&lt;/code&gt;?&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;scan&lt;/code&gt; 使用最新的 API 和工具来确保能够很简单的运行测试，同时提供了集成到你现有的工作流中，比如 &lt;a href=&#34;https://fastlane.tools&#34;&gt;fastlane&lt;/a&gt; 或者 Jenkins。&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;center&#34;&gt;scan 功能&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;在运行测试的时候有漂亮的输出&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;合理的默认设置：自动检测 Project、Schemes等等&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;支持 HTML、JSON、JUnit 报告&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;Xcode 又 duplicated 你的模拟器？ &lt;code&gt;scan&lt;/code&gt;将会为你处理这些&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;与其它工具以及 &lt;a href=&#34;https://fastlane.tools&#34;&gt;fastlane&lt;/a&gt; 完美配合&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;不需要记住任何复杂的构建命令，只有&lt;code&gt;scan&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;使用参数和环境变量能够非常容易的动态配置&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;测试结果会用漂亮的 Slack Notifications 通知你&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;在&lt;code&gt;Scanfile&lt;/code&gt;里存储构建的命令设置&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;原始的 &lt;code&gt;xcodebuild&lt;/code&gt; 输出保存在 &lt;code&gt;~/Library/Logs/scan&lt;/code&gt; 里&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;支持 iOS 和 Mac 应用程序&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;当运行在 Travis 上的时候会自动转换成 &lt;a href=&#34;https://github.com/kattrali/xcpretty-travis-formatter&#34;&gt;travis formatter&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;帮助你解决常见的测试错误，比如模拟器不响应&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;code&gt;scan&lt;/code&gt; 使用的是简单的 &lt;code&gt;xcodebuild&lt;/code&gt; 命令，因此保持了与 &lt;code&gt;xcodebuild&lt;/code&gt; 100%的兼容性。为了生成漂亮的输出，&lt;code&gt;scan&lt;/code&gt; 使用 &lt;a href=&#34;https://github.com/supermarin/xcpretty&#34;&gt;xcpretty&lt;/a&gt;。你总是可以在 &lt;code&gt;~/Library/Logs/scan&lt;/code&gt; 中访问原始的输出。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://lynchwong.com/img/FastlaneScan/scanScreenshot.png&#34; alt=&#34;alt text&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://lynchwong.com/img/FastlaneScan/slack.png&#34; alt=&#34;alt text&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://lynchwong.com/img/FastlaneScan/scanHTML.png&#34; alt=&#34;alt text&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://lynchwong.com/img/FastlaneScan/scanHTMLFailing.png&#34; alt=&#34;alt text&#34; /&gt;&lt;/p&gt;

&lt;h1 id=&#34;安装&#34;&gt;安装&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;sudo gem install scan
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;确保你已经安装了最新版本的 Xcode 命令行工具：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;xcode-select --install
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;使用&#34;&gt;使用&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;scan
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这就是所有的命令。如果你想要更多的控制，这里有一些可用的参数：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;scan --workspace &amp;quot;Example.xcworkspace&amp;quot; --scheme &amp;quot;AppName&amp;quot; --device &amp;quot;iPhone 6&amp;quot; --clean
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果你需要安装不同的 Xcode，使用 &lt;code&gt;xcode-select&lt;/code&gt; 或者定义 &lt;code&gt;DEVELOPER_DIR&lt;/code&gt; :&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;DEVELOPER_DIR=&amp;quot;/Applications/Xcode6.2.app&amp;quot; scan
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;通过 &lt;a href=&#34;https://fastlane.tools&#34;&gt;fastlane&lt;/a&gt; 在多个设备上运行 &lt;code&gt;scan&lt;/code&gt;，添加到你的 &lt;code&gt;Fastfile&lt;/code&gt; ：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;scan(
    workspace: &amp;quot;Example.xcworkspace&amp;quot;,
    devices: [&amp;quot;iPhone 6s&amp;quot;, &amp;quot;iPad Air&amp;quot;]
)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;列出所有可用的参数：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;scan --help
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;访问原始的 &lt;code&gt;xcodebuild&lt;/code&gt; 输出，打开 &lt;code&gt;~/Library/Logs/scan&lt;/code&gt; 。&lt;/p&gt;

&lt;h2 id=&#34;scanfile&#34;&gt;Scanfile&lt;/h2&gt;

&lt;p&gt;由于你可能想要手动触发测试，但是又不想每次都指定所有的参数，你可以将你的默认设置存储在 &lt;code&gt;Scanfile&lt;/code&gt; 里。&lt;/p&gt;

&lt;p&gt;运行 &lt;code&gt;scan init&lt;/code&gt; 创建一个新的配置文件，比如：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;scheme &amp;quot;Example&amp;quot;
devices [&amp;quot;iPhone 6s&amp;quot;, &amp;quot;iPad Air&amp;quot;]

clean true

output_types &amp;quot;html&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;自动化整个处理过程&#34;&gt;自动化整个处理过程&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;scan&lt;/code&gt; 与 &lt;a href=&#34;https://fastlane.tools&#34;&gt;fastlane&lt;/a&gt; 一起工作良好，将所有的部署工具整合在一起。&lt;/p&gt;

&lt;p&gt;使用 &lt;code&gt;fastlane&lt;/code&gt; 你可以像这样定义配置文件：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;lane :test do
    scan(scheme: &amp;quot;Example&amp;quot;)
end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;更多信息，访问 &lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/fastlane&#34;&gt;fastlane GitHub page&lt;/a&gt;。&lt;/p&gt;

&lt;h1 id=&#34;提示&#34;&gt;提示&lt;/h1&gt;

&lt;h1 id=&#34;fastlane-工具链&#34;&gt;&lt;code&gt;fastlane&lt;/code&gt; 工具链&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://fastlane.tools&#34;&gt; &lt;code&gt;fastlane&lt;/code&gt; &lt;/a&gt;：自动化构建和发布你 iOS 和 Android 应用程序的最简单方法&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/deliver&#34;&gt; &lt;code&gt;deliver&lt;/code&gt; &lt;/a&gt;：将你的应用、截图、元数据上传到App Store&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/snapshot&#34;&gt; &lt;code&gt;snapshot&lt;/code&gt; &lt;/a&gt;：将你iOS应用在每一种设备上进行本地化自动截图&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/frameit&#34;&gt; &lt;code&gt;frameit&lt;/code&gt; &lt;/a&gt;：快速将你的截图放入到适合的设备框中&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/pem&#34;&gt; &lt;code&gt;pem&lt;/code&gt; &lt;/a&gt;：自动生成和更新你的推送通知证书&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/produce&#34;&gt; &lt;code&gt;produce&lt;/code&gt; &lt;/a&gt;：使用命令行工具在 iTunes Connect 和 Dev Portal 上创建新的iOS应用&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/cert&#34;&gt; &lt;code&gt;cert&lt;/code&gt; &lt;/a&gt;：自动创建和维护iOS的 code signing certificates&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/spaceship&#34;&gt; &lt;code&gt;spaceship&lt;/code&gt; &lt;/a&gt;：一个 Ruby library，自动连接 Apple Dev Center 和 iTunes Connect&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/pilot&#34;&gt; &lt;code&gt;pilot&lt;/code&gt; &lt;/a&gt;：管理你TestFlight测试人员的最好方式，使用终端构建&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/boarding&#34;&gt; &lt;code&gt;boarding&lt;/code&gt; &lt;/a&gt;：邀请你 TestFlight 的beta测试人员的最简单方式&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/gym&#34;&gt; &lt;code&gt;gym&lt;/code&gt; &lt;/a&gt;：构建你iOS应用程序&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/match&#34;&gt; &lt;code&gt;match&lt;/code&gt; &lt;/a&gt;：在你的团队之间使用 Git 轻松的同步你的证书和配置文件&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/supply&#34;&gt; &lt;code&gt;supply&lt;/code&gt; &lt;/a&gt;：将你的Android应用和数据上传到 Google Play&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/screengrab&#34;&gt; &lt;code&gt;screengrab&lt;/code&gt; &lt;/a&gt;：Android版&lt;code&gt;snapshot&lt;/code&gt;，一样的功能&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;帮助&#34;&gt;帮助&lt;/h1&gt;

&lt;p&gt;请提交 issue 到 GitHub，并提供你关于设置的信息。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Fastlane - Gym</title>
      <link>http://lynchwong.com/2016/06/fastlane---gym/</link>
      <pubDate>Tue, 28 Jun 2016 09:05:06 +0000</pubDate>
      
      <guid>http://lynchwong.com/2016/06/fastlane---gym/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;说明：翻译的 &lt;code&gt;Gym&lt;/code&gt; 的指南，&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/gym&#34;&gt; 原文地址 &lt;/a&gt;。
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&#34;http://lynchwong.com/img/FastlaneGym/gym.png&#34; alt=&#34;alt text&#34; /&gt;&lt;/p&gt;

&lt;h1 id=&#34;gym&#34;&gt;gym&lt;/h1&gt;

&lt;p&gt;构建你的应用程序从未如此简单。&lt;/p&gt;

&lt;h1 id=&#34;gym-是什么&#34;&gt;gym 是什么？&lt;/h1&gt;

&lt;p&gt;&lt;code&gt;gym&lt;/code&gt; 构建然后打包你的 iOS 和 OS X 应用程序。为你处理了很多繁重的事情，能够非常简单的生成签名的 &lt;code&gt;ipa&lt;/code&gt; 或者 &lt;code&gt;app&lt;/code&gt; 文件。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;gym&lt;/code&gt; 是 &lt;a href=&#34;https://github.com/nomad/shenzhen&#34;&gt;shenzhen&lt;/a&gt; 的替代。&lt;/p&gt;

&lt;h2 id=&#34;gym-之前&#34;&gt;&lt;code&gt;gym&lt;/code&gt; 之前&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;xcodebuild clean archive -archivePath build/MyApp \
                         -scheme MyApp
xcodebuild -exportArchive \
           -exportFormat ipa \
           -archivePath &amp;quot;build/MyApp.xcarchive&amp;quot; \
           -exportPath &amp;quot;build/MyApp.ipa&amp;quot; \
           -exportProvisioningProfile &amp;quot;ProvisioningProfileName&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;使用-gym&#34;&gt;使用 &lt;code&gt;gym&lt;/code&gt;&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;gym
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;为什么使用-gym&#34;&gt;为什么使用 &lt;code&gt;gym&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;gym&lt;/code&gt; 使用最新的API来构建签名你的应用程序，会节省大量的构建时间。&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;center&#34;&gt;Gym的功能&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;&lt;code&gt;gym&lt;/code&gt; 比其它构建工具，比如 &lt;a href=&#34;https://github.com/nomad/shenzhen&#34;&gt;shenzhen&lt;/a&gt; 要快30%&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;漂亮的输出&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;帮助你解决常见的构建错误，比如 Code Signing issues&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;合理的默认值：自动检测Project、Schemes等&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;与其它工具以及 &lt;a href=&#34;https://fastlane.tools&#34;&gt;fastlane&lt;/a&gt; 完美配合&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;自动生成 &lt;code&gt;ipa&lt;/code&gt; 和 压缩的 &lt;code&gt;dSYM&lt;/code&gt; 文件&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;不需要记住任何复杂的命令，只有 &lt;code&gt;gym&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;使用参数和环境变量能够简单的动态配置&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;在 &lt;code&gt;Gymfile&lt;/code&gt; 文件中存储常用的构建设置&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;所有的 Archives 存储了，可以在 Xcode Organizer 中访问&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;支持 iOS 和 Mac 应用程序&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;img src=&#34;http://lynchwong.com/img/FastlaneGym/gymScreenshot.png&#34; alt=&#34;alt text&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://lynchwong.com/img/FastlaneGym/gym.gif&#34; alt=&#34;alt text&#34; /&gt;&lt;/p&gt;

&lt;h1 id=&#34;安装&#34;&gt;安装&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;sudo gem install gym
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;确保你已经安装了最新版本的 Xcode 命令行工具：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;xcode-select --install
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;使用&#34;&gt;使用&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;gym
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这就是构建程序所需的所有命令。如果你需要更多的控制，这里有些可用的参数：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;gym --workspace &amp;quot;Example.xcworkspace&amp;quot; --scheme &amp;quot;AppName&amp;quot; --clean
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果你需要安装使用不同的 Xcode，使用 xcode-select 或者定义 DEVELOPER_DIR：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;DEVELOPER_DIR=&amp;quot;/Applications/Xcode6.2.app&amp;quot; gym
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;获取可用的参数列表：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;gym --help
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果你遇到任何问题，使用 &lt;code&gt;verbose&lt;/code&gt; 模式获取更多的信息：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;gym --verbose
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;通常来说，当你在导出 Archive 时遇到问题，尝试运行：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;gym --use_legacy_build_api
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果你不需要上传到 App Store 或者 TestFlight 设置正确的导出方法：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;gym --export_method ad-hoc
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;传递布尔参数确保是否使用 &lt;code&gt;gym&lt;/code&gt; ：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;gym --include_bitcode true --include_symbols false
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;访问原始的 &lt;code&gt;xcodebuild&lt;/code&gt; 输出，打开 &lt;code&gt;~/Library/Logs/gym&lt;/code&gt; 。&lt;/p&gt;

&lt;h2 id=&#34;gymfile&#34;&gt;Gymfile&lt;/h2&gt;

&lt;p&gt;由于你可能想要手动触发一个新的构建而不想每次都指定所有的参数，你可以将默认值存储在 &lt;code&gt;Gymfile&lt;/code&gt; 里。&lt;/p&gt;

&lt;p&gt;运行 &lt;code&gt;gym init&lt;/code&gt; 创建一个新的配置文件，比如：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;scheme &amp;quot;Example&amp;quot;

sdk &amp;quot;iphoneos9.0&amp;quot;

clean true

output_directory &amp;quot;./build&amp;quot;    # store the ipa in this folder
output_name &amp;quot;MyApp&amp;quot;           # the name of the ipa file
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;导出选项&#34;&gt;导出选项&lt;/h2&gt;

&lt;p&gt;由于 Xcode7，&lt;code&gt;gym&lt;/code&gt; 使用新的 Xcode API 允许我们使用 &lt;code&gt;plist&lt;/code&gt; 文件指定导出选项。&lt;code&gt;gym&lt;/code&gt; 会为你创建这个文件，然后你可以通过使用 &lt;code&gt;export_method&lt;/code&gt;，&lt;code&gt;export_team_id&lt;/code&gt;，&lt;code&gt;include_symbols&lt;/code&gt; 或者 &lt;code&gt;include_bitcode&lt;/code&gt; 来修改一些参数。如果你想要更多的选项，比如创建  manifest 文件 或者 app thinning，你可以提供你自己的 &lt;code&gt;plist&lt;/code&gt; 文件：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;export_options &amp;quot;./ExportOptions.plist&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;或者你可以在 &lt;code&gt;Gymfile&lt;/code&gt; 文件里直接提供 hash 值：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;export_options(
    method: &amp;quot;ad-hoc&amp;quot;,
    manifest: {
        appURL: &amp;quot;https://example.com/My App.ipa&amp;quot;,
    },
    thinning: &amp;quot;&amp;lt;thin-for-all-variants&amp;gt;&amp;quot;
)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;列出可用的选项运行 &lt;code&gt;xcodebuild -help&lt;/code&gt;。&lt;/p&gt;

&lt;h2 id=&#34;设置-code-signing&#34;&gt;设置 Code Signing&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/fastlane/docs/Codesigning&#34;&gt;More information on how to get started with codesigning&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/fastlane/blob/master/fastlane/docs/Codesigning/XcodeProject.md&#34;&gt;Docs on how to set up your Xcode project&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;自动处理所有过程&#34;&gt;自动处理所有过程&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;gym&lt;/code&gt; 与 &lt;a href=&#34;https://fastlane.tools&#34;&gt;fastlane&lt;/a&gt; 工作的很好，将所有的发布工具整合到工作流里面。&lt;/p&gt;

&lt;p&gt;你可以像这样定义 &lt;code&gt;fastlane&lt;/code&gt; 的配置：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;lane :beta do
    xctool
    gym(scheme: &amp;quot;MyApp&amp;quot;)
    crashlytics
end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;然后你可以非常容易的在其它 &lt;code&gt;lane&lt;/code&gt; 之间切换(比如 &lt;code&gt;testflight&lt;/code&gt;，&lt;code&gt;hockey&lt;/code&gt;，&lt;code&gt;s3&lt;/code&gt; 等等)。&lt;/p&gt;

&lt;p&gt;更多信息，访问 &lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/fastlane&#34;&gt;fastlane GitHub page&lt;/a&gt;。&lt;/p&gt;

&lt;h1 id=&#34;如何工作的&#34;&gt;如何工作的？&lt;/h1&gt;

&lt;p&gt;&lt;code&gt;gym&lt;/code&gt; 使用最新的API来构建签名你的应用程序。两个主要的控件：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;xcodebuild&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/supermarin/xcpretty&#34;&gt;xcpretty&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;当你运行 &lt;code&gt;gym&lt;/code&gt; ，没有使用 &lt;code&gt;--silent&lt;/code&gt; 模式，将会打印每一个执行的命令。&lt;/p&gt;

&lt;p&gt;为了构建 Archive ，&lt;code&gt;gym&lt;/code&gt; 使用如下命令：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;set -o pipefail &amp;amp;&amp;amp; \
xcodebuild -scheme &#39;Example&#39; \
-project &#39;./Example.xcodeproj&#39; \
-configuration &#39;Release&#39; \
-destination &#39;generic/platform=iOS&#39; \
-archivePath &#39;/Users/felixkrause/Library/Developer/Xcode/Archives/2015-08-11/ExampleProductName 2015-08-11 18.15.30.xcarchive&#39; \
archive | xcpretty
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;构建之后，&lt;code&gt;gym&lt;/code&gt; 会检查。如果有效，就会签名打包到 &lt;code&gt;ipa&lt;/code&gt; 文件里。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;gym&lt;/code&gt; 会根据你当前使用的 Xcode 的版本选择不同的打包方法。&lt;/p&gt;

&lt;h2 id=&#34;xcode7-及以上&#34;&gt;Xcode7 及以上&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;/usr/bin/xcrun path/to/xcbuild-safe.sh -exportArchive \
-exportOptionsPlist &#39;/tmp/gym_config_1442852529.plist&#39; \
-archivePath &#39;/Users/fkrause/Library/Developer/Xcode/Archives/2015-09-21/App 2015-09-21 09.21.56.xcarchive&#39; \
-exportPath &#39;/tmp/1442852529&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;gym&lt;/code&gt; 使用 Xcode7 最新的API，允许我们使用 &lt;code&gt;plist&lt;/code&gt; 文件来执行导出选项。你可以运行 &lt;code&gt;xcodebuild --help&lt;/code&gt; 获取更多可用选项的信息。&lt;/p&gt;

&lt;p&gt;Using this method there are no workarounds for WatchKit or Swift required, as it uses the same technique Xcode uses when exporting your binary.&lt;/p&gt;

&lt;p&gt;Note: the &lt;a href=&#34;https://github.com/fastlane/fastlane/blob/master/gym/lib/assets/wrap_xcodebuild/xcbuild-safe.sh&#34;&gt;xcbuild-safe.sh script&lt;/a&gt; wraps around xcodebuild to workaround some incompatibilities.&lt;/p&gt;

&lt;h2 id=&#34;xcode6-及以下&#34;&gt;Xcode6 及以下&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;/usr/bin/xcrun /path/to/PackageApplication4Gym -v \
&#39;/Users/felixkrause/Library/Developer/Xcode/Archives/2015-08-11/ExampleProductName 2015-08-11 18.15.30.xcarchive/Products/Applications/name.app&#39; -o \
&#39;/Users/felixkrause/Library/Developer/Xcode/Archives/2015-08-11/ExampleProductName.ipa&#39; \
--sign &amp;quot;identity&amp;quot; --embed &amp;quot;provProfile&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Note: the official PackageApplication script is replaced by a custom PackageApplication4Gym script. This script is obtained by applying a &lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/gym/lib/assets/package_application_patches&#34;&gt;set of patches&lt;/a&gt; on the fly to fix some known issues in the official Xcode PackageApplication script.&lt;/p&gt;

&lt;p&gt;Afterwards the ipa file is moved to the output folder. The dSYM file is compressed and moved to the output folder as well.&lt;/p&gt;

&lt;h1 id=&#34;提示&#34;&gt;提示&lt;/h1&gt;

&lt;h2 id=&#34;fastlane-工具链&#34;&gt;&lt;code&gt;fastlane&lt;/code&gt;工具链&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://fastlane.tools&#34;&gt; &lt;code&gt;fastlane&lt;/code&gt; &lt;/a&gt;：自动化构建和发布你 iOS 和 Android 应用程序的最简单方法&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/deliver&#34;&gt; &lt;code&gt;deliver&lt;/code&gt; &lt;/a&gt;：将你的应用、截图、元数据上传到App Store&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/snapshot&#34;&gt; &lt;code&gt;snapshot&lt;/code&gt; &lt;/a&gt;：将你iOS应用在每一种设备上进行本地化自动截图&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/frameit&#34;&gt; &lt;code&gt;frameit&lt;/code&gt; &lt;/a&gt;：快速将你的截图放入到适合的设备框中&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/pem&#34;&gt; &lt;code&gt;pem&lt;/code&gt; &lt;/a&gt;自动生成和更新你的推送通知证书&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/sigh&#34;&gt; &lt;code&gt;sigh&lt;/code&gt; &lt;/a&gt;：管理你的 provisioning profiles&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/produce&#34;&gt; &lt;code&gt;produce&lt;/code&gt; &lt;/a&gt;：使用命令行工具在 iTunes Connect 和 Dev Portal 上创建新的iOS应用&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/cert&#34;&gt; &lt;code&gt;cert&lt;/code&gt; &lt;/a&gt;：自动创建和维护iOS的 code signing certificates&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/spaceship&#34;&gt; &lt;code&gt;spaceship&lt;/code&gt; &lt;/a&gt;：一个 Ruby library，自动连接 Apple Dev Center 和 iTunes Connect&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/pilot&#34;&gt; &lt;code&gt;pilot&lt;/code&gt; &lt;/a&gt;：管理你TestFlight测试人员的最好方式，使用终端构建&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/boarding&#34;&gt; &lt;code&gt;boarding&lt;/code&gt; &lt;/a&gt;：邀请你 TestFlight 的beta测试人员的最简单方式&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/scan&#34;&gt; &lt;code&gt;scan&lt;/code&gt; &lt;/a&gt;：为你iOS和Mac应用运行测试的最简单方法&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/match&#34;&gt; &lt;code&gt;match&lt;/code&gt; &lt;/a&gt;：使用Git在你的团队中同步你的 certificates 和 profiles&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/supply&#34;&gt; &lt;code&gt;supply&lt;/code&gt; &lt;/a&gt;：将你的Android应用和数据上传到 Google Play&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/screengrab&#34;&gt; &lt;code&gt;screengrab&lt;/code&gt; &lt;/a&gt;：Android版&lt;code&gt;snapshot&lt;/code&gt;，一样的功能&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;使用-provisioning-quicklook-plugin&#34;&gt;使用 &amp;lsquo;Provisioning Quicklook plugin&amp;rsquo;&lt;/h2&gt;

&lt;p&gt;下载安装 &lt;a href=&#34;https://github.com/chockenberry/Provisioning&#34;&gt;Provisioning Plugin&lt;/a&gt;。&lt;/p&gt;

&lt;h1 id=&#34;帮助&#34;&gt;帮助&lt;/h1&gt;

&lt;p&gt;请提交 issue 到 GitHub，并提供你关于设置的信息。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Fastlane - Boarding</title>
      <link>http://lynchwong.com/2016/06/fastlane---boarding/</link>
      <pubDate>Tue, 28 Jun 2016 09:04:26 +0000</pubDate>
      
      <guid>http://lynchwong.com/2016/06/fastlane---boarding/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;说明：翻译的 &lt;code&gt;Boarding&lt;/code&gt; 的指南，&lt;a href=&#34;https://github.com/fastlane/boarding&#34;&gt; 原文地址 &lt;/a&gt;。
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&#34;http://lynchwong.com/img/FastlaneBoarding/BoardingHuge.png&#34; alt=&#34;alt text&#34; /&gt;&lt;/p&gt;

&lt;h1 id=&#34;boarding-是什么&#34;&gt;boarding 是什么？&lt;/h1&gt;

&lt;p&gt;即时为 TestFlight beta 测试人员创建一个注册页面。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Have you ever been to an airport, where you had to ask the manager of the airport if you can board now? Once the manager agrees, you&amp;rsquo;ll be carried from your check-in to your gate into your plane.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;做为一个开发人员，当你想添加一个新的测试人员时你就是这么做的： &lt;a href=&#34;https://raw.githubusercontent.com/fastlane/boarding/master/assets/OldWay.jpg&#34;&gt;Open Screenshots&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;你为什么不弄一个简单的网页，与你潜在的测试人员分享(比如邮件、Facebook、Twitter)，那些对你的新 App 感兴趣的人，然后让他们自己来 &lt;code&gt;board&lt;/code&gt; ？&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://lynchwong.com/img/FastlaneBoarding/BoardingScreenshot.png&#34; alt=&#34;alt text&#34; /&gt;&lt;/p&gt;

&lt;p&gt;感谢 &lt;a href=&#34;https://spaceship.airforce&#34;&gt;spaceship.airforce&lt;/a&gt; ，现在可以自动为你的 TestFlight beta 测试人员 boarding process 。&lt;/p&gt;

&lt;h2 id=&#34;例子&#34;&gt;例子&lt;/h2&gt;

&lt;p&gt;查看鲜活的例子页面： &lt;a href=&#34;https://boarding.herokuapp.com&#34;&gt;boarding.herokuapp.com&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;开始&#34;&gt;开始&lt;/h1&gt;

&lt;p&gt;将设你已经有 &lt;a href=&#34;https://www.heroku.com&#34;&gt;Heroku&lt;/a&gt; 账户，按照如下步骤：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Deploy to Heroku&lt;/li&gt;
&lt;li&gt;输入你 iTunes Connect 的凭证和你 App 的 Bundle identifier。这些会被当做你自己 Heroku 实例的环境变量&lt;/li&gt;
&lt;li&gt;一旦设置完成，点击 &lt;code&gt;view&lt;/code&gt; 然后开始分享 URL&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;boarding&lt;/code&gt; 已经为你做了所有神奇的工作，比如获取应用的名字和图标。&lt;/p&gt;

&lt;p&gt;对于标准的机器，Heroku 是免费的。如果你需要一个 Heroku 账户，如果你已经有了公司账户，询问你的支持团队。&lt;/p&gt;

&lt;h2 id=&#34;安全&#34;&gt;安全&lt;/h2&gt;

&lt;p&gt;为了确保你的网页的安全，你只需要为 &lt;code&gt;ITC_TOKEN&lt;/code&gt; 环境变量设置任何密码。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;你可以给你的测试人员发送链接然后告诉他们密码&lt;/li&gt;
&lt;li&gt;你可以直接给他们发送包含 token 的链接，比如： &lt;a href=&#34;https://url.com/?token=[password&#34;&gt;https://url.com/?token=[password&lt;/a&gt;]&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;可用的环境变量&#34;&gt;可用的环境变量&lt;/h2&gt;

&lt;p&gt;要求：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ITC_USER&lt;/code&gt;  iTunes Connect 用户名&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ITC_PASSWORD&lt;/code&gt; iTunes Connect 密码&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ITC_APP_ID&lt;/code&gt; 你 App 的 Apple ID 或者 Bundle Identifier&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;可选：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ITC_TOKEN&lt;/code&gt; 设置一个密码来防止路人注册&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ITC_CLOSED_TEXT&lt;/code&gt; 这只这个变量来临时禁用新的测试人员注册&lt;/li&gt;
&lt;li&gt;&lt;code&gt;RESTRICTED_DOMAIN&lt;/code&gt; 设置这个域名来限制用户使用来自另一个域名的邮件进行注册。使用这种格式 &lt;code&gt;domain1.com,domain2.com&lt;/code&gt; 支持设置多个域名&lt;/li&gt;
&lt;li&gt;&lt;code&gt;FASTLANE_ITC_TEAM_NAME&lt;/code&gt; 如果你在多个团队中，在这里输入你 iTC 团队的名字。确保匹配&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;自定义域名&#34;&gt;自定义域名&lt;/h2&gt;

&lt;p&gt;使用 Heroku ，你可以使用自己的域名，参见 &lt;a href=&#34;https://devcenter.heroku.com/articles/custom-domains&#34;&gt;this guide&lt;/a&gt;。&lt;/p&gt;

&lt;h1 id=&#34;如何工作的&#34;&gt;如何工作的？&lt;/h1&gt;

&lt;p&gt;&lt;code&gt;boarding&lt;/code&gt; 是 &lt;a href=&#34;https://fastlane.tools&#34;&gt;fastlane&lt;/a&gt; 的一部分，帮助你自动化一些需要开发人员手动完成的工作。&lt;/p&gt;

&lt;p&gt;使用 &lt;a href=&#34;https://spaceship.airforce&#34;&gt;spaceship.airforce&lt;/a&gt; 能够管理测试人员、构建、元数据、证书等等。&lt;/p&gt;

&lt;p&gt;这个 Repository 就是一个简单的 Rails 应用程序，大部分代码在如下文件中：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/boarding/blob/master/app/controllers/invite_controller.rb&#34;&gt;invite_controller.rb&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/boarding/blob/master/app/views/invite/index.html.erb&#34;&gt;invite/index.html.erb&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;http://lynchwong.com/img/FastlaneBoarding/BoardingOverview.png&#34; alt=&#34;alt text&#34; /&gt;&lt;/p&gt;

&lt;p&gt;更多关于自动化过程的信息，参见 &lt;a href=&#34;https://krausefx.com&#34;&gt;my blog&lt;/a&gt; 。&lt;/p&gt;

&lt;h1 id=&#34;自定义&#34;&gt;自定义&lt;/h1&gt;

&lt;p&gt;如果你想要改变设计，布局，添加新的功能：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;安装 &lt;a href=&#34;https://toolbelt.heroku.com&#34;&gt;Heroku toolbelt&lt;/a&gt; 和 &lt;code&gt;heroku login&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Clone 你的应用程序，使用 &lt;code&gt;heroku git:clone --app [heroku_app_name]&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cd [heroku_app_name]&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;修改上面描述到的文件的内容&lt;/li&gt;
&lt;li&gt;运行 &lt;code&gt;ITC_USER=&amp;quot;email&amp;quot; ITC_... rails s&lt;/code&gt; 在本地测试，然后打开 &lt;a href=&#34;http://127.0.0.1:3000&#34;&gt;http://127.0.0.1:3000&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;提交改变&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git push&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;除了 Heroku 之外，推荐你将版本信息也存储在你的 Git Repo 中。&lt;/p&gt;

&lt;h2 id=&#34;更新到新的版本&#34;&gt;更新到新的版本&lt;/h2&gt;

&lt;p&gt;随着时间的推移，&lt;code&gt;boarding&lt;/code&gt; 会迎来更新。有两种方法来更新你的 Heroku 应用程序；&lt;/p&gt;

&lt;h3 id=&#34;推荐-使用-terminal&#34;&gt;推荐：使用 Terminal&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;安装 &lt;a href=&#34;https://toolbelt.heroku.com&#34;&gt;Heroku toolbelt&lt;/a&gt; 和 &lt;code&gt;heroku login&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Clone 你的应用程序，使用 &lt;code&gt;heroku git:clone --app [heroku_app_name]&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cd [heroku_app_name]&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git pull https://github.com/fastlane/boarding&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git push&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;使用-heroku-website&#34;&gt;使用 Heroku Website&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;删除你在 &lt;a href=&#34;https://www.heroku.com&#34;&gt;heroku.com&lt;/a&gt; 上的应用程序&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.heroku.com/deploy?template=https://github.com/fastlane/boarding&#34;&gt;Create a new boarding application&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;再次输入你的用户凭证&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Fastlane - Pilot</title>
      <link>http://lynchwong.com/2016/06/fastlane---pilot/</link>
      <pubDate>Tue, 28 Jun 2016 09:03:59 +0000</pubDate>
      
      <guid>http://lynchwong.com/2016/06/fastlane---pilot/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;说明：翻译的 &lt;code&gt;Pilot&lt;/code&gt; 的指南，&lt;a href=&#34;https://github.com/fastlane-old/pilot&#34;&gt; 原文地址 &lt;/a&gt;。
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&#34;http://lynchwong.com/img/FastlanePilot/PilotTextTransparentSmall.png&#34; alt=&#34;alt text&#34; /&gt;&lt;/p&gt;

&lt;h1 id=&#34;pilot&#34;&gt;Pilot&lt;/h1&gt;

&lt;p&gt;管理你 TestFlight 用户的最简单的方法。&lt;/p&gt;

&lt;p&gt;Pilot 让你能够非常容易的管理你应用的 Apple&amp;rsquo;s TestFlight。你可以：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;上传 &amp;amp; 分发 你构建的应用&lt;/li&gt;
&lt;li&gt;添加 &amp;amp; 移除 测试用户&lt;/li&gt;
&lt;li&gt;获取 测试用户 &amp;amp; 设备 的信息&lt;/li&gt;
&lt;li&gt;导出/导入 所有可用的测试用户&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;pilot&lt;/code&gt; 使用 &lt;a href=&#34;https://spaceship.airforce&#34;&gt;spaceship.airforce&lt;/a&gt; 和 iTunes Connect 交互。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;pilot&lt;/code&gt; 现在是 &lt;a href=&#34;https://fastlane.tools&#34;&gt;fastlane&lt;/a&gt; 的一部分：自动构建、发布你 iOS 和 Android 应用的最简单方法。&lt;/p&gt;

&lt;h1 id=&#34;安装&#34;&gt;安装&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;sudo gem install pilot
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;使用&#34;&gt;使用&lt;/h1&gt;

&lt;p&gt;你可以使用 &lt;code&gt;-u felix@krausefx.com&lt;/code&gt; 命令来指定 Apple ID。如果你的项目已经使用了 &lt;a href=&#34;https://fastlane.tools&#34;&gt;fastlane&lt;/a&gt; ，用户名和 App identifier 会自动检测。&lt;/p&gt;

&lt;h2 id=&#34;上传构建的应用&#34;&gt;上传构建的应用&lt;/h2&gt;

&lt;p&gt;上传一个新的构建，只需运行：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;pilot upload
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;将会在你当前目录查找 &lt;code&gt;ipa&lt;/code&gt; 文件，然后会尝试从 &lt;a href=&#34;https://fastlane.tools&#34;&gt;fastlane setup&lt;/a&gt; 中获取登录凭证。&lt;/p&gt;

&lt;p&gt;然后会向你询问漏掉的信息。另外，你可以传递所有种类的参数：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;pilot --help
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;你可以使用下面的命令传递修改日志：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;pilot upload --changelog &amp;quot;Something that is new here&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;你也可以跳过二进制的提交，这意味着，&lt;code&gt;ipa&lt;/code&gt; 文件只会被上传，不会分发给测试用户：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;pilot upload --skip_submission
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;pilot&lt;/code&gt; 为你做了所有神奇的工作：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;从你的 &lt;code&gt;ipa&lt;/code&gt; 文件中自动检测 Bundle identifier&lt;/li&gt;
&lt;li&gt;基于 Bundle identifier，自动获取你 App 的 AppID&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;pilot&lt;/code&gt; 使用 &lt;a href=&#34;https://spaceship.airforce&#34;&gt;spaceship&lt;/a&gt; 来提交构建的元数据，然后使用 iTunes Transporter 来上传二进制。&lt;/p&gt;

&lt;h2 id=&#34;列出构建的应用&#34;&gt;列出构建的应用&lt;/h2&gt;

&lt;p&gt;列出指定应用程序的所有构建：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;pilot builds
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;会列出所有激活的构建和处理中的构建：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;+-----------+---------+----------+----------+----------+
|                   Great App Builds                   |
+-----------+---------+----------+----------+----------+
| Version # | Build # | Testing  | Installs | Sessions |
+-----------+---------+----------+----------+----------+
| 0.9.13    | 1       | Expired  | 1        | 0        |
| 0.9.13    | 2       | Expired  | 0        | 0        |
| 0.9.20    | 3       | Expired  | 0        | 0        |
| 0.9.20    | 4       | Internal | 5        | 3        |
+-----------+---------+----------+----------+----------+
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;管理测试用户&#34;&gt;管理测试用户&lt;/h1&gt;

&lt;h2 id=&#34;列出所有的测试人员&#34;&gt;列出所有的测试人员&lt;/h2&gt;

&lt;p&gt;这个命令会列出所有的测试人员，包括内部人员和外部人员。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;pilot list
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;输出如下：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;+--------+--------+--------------------------+-----------+
|                    Internal Testers                    |
+--------+--------+--------------------------+-----------+
| First  | Last   | Email                    | # Devices |
+--------+--------+--------------------------+-----------+
| Felix  | Krause | felix@krausefx.com       | 2         |
+--------+--------+--------------------------+-----------+

+-----------+---------+----------------------------+-----------+
|                       External Testers                       |
+-----------+---------+----------------------------+-----------+
| First     | Last    | Email                      | # Devices |
+-----------+---------+----------------------------+-----------+
| Max       | Manfred | email@email.com            | 0         |
| Detlef    | Müller  | detlef@krausefx.com        | 1         |
+-----------+---------+----------------------------+-----------+
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;添加新的测试人员&#34;&gt;添加新的测试人员&lt;/h2&gt;

&lt;p&gt;使用 &lt;code&gt;pilot add&lt;/code&gt; 命令来为你的 iTunes Connect 账户和应用添加新的测试人员。这个会创建新的测试人员(如果必要的话)或者添加一个已经存在的测试人员到App进行测试。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;pilot add email@invite.com
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;除此之外，你可以指定 App 的 identifier(如果必要)：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;pilot add email@email.com -a com.krausefx.app
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;查找一个测试人员&#34;&gt;查找一个测试人员&lt;/h2&gt;

&lt;p&gt;查找一个指定的测试人员：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;pilot find felix@krausefx.com
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;输出结果如下：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;+---------------------+---------------------+
|            felix@krausefx.com             |
+---------------------+---------------------+
| First name          | Felix               |
| Last name           | Krause              |
| Email               | felix@krausefx.com  |
| Latest Version      | 0.9.14 (23          |
| Latest Install Date | 03/28/15 19:00      |
| 2 Devices           | • iPhone 6, iOS 8.3 |
|                     | • iPhone 5, iOS 7.0 |
+---------------------+---------------------+
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;移除一个测试人员&#34;&gt;移除一个测试人员&lt;/h2&gt;

&lt;p&gt;这个命令只会移除外部的测试人员：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;pilot remove felix@krausefx.com
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;导出测试人员&#34;&gt;导出测试人员&lt;/h2&gt;

&lt;p&gt;将所有的外部测试人员导出到 CSV 文件。这个非常有用，如果你需要将测试人员的信息导入到另一个系统或者新的账户。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;pilot export
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;导入测试人员&#34;&gt;导入测试人员&lt;/h2&gt;

&lt;p&gt;从一个 CSV 文件中添加外部测试人员。&lt;a href=&#34;https://itunesconnect.apple.com/itc/docs/tester_import.csv&#34;&gt;这里有一个可用的 CSV 文件&lt;/a&gt;。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;pilot import
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;你也可以使用下面的命令来指定目录：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;pilot export -c ~/Desktop/testers.csv
pilot import -c ~/Desktop/testers.csv
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;提示&#34;&gt;提示&lt;/h1&gt;

&lt;h2 id=&#34;fastlane-https-fastlane-tools-工具链&#34;&gt;&lt;a href=&#34;https://fastlane.tools&#34;&gt;&lt;code&gt;fastlane&lt;/code&gt;&lt;/a&gt; 工具链&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://fastlane.tools&#34;&gt; &lt;code&gt;fastlane&lt;/code&gt; &lt;/a&gt;：自动化构建和发布你 iOS 和 Android 应用程序的最简单方法&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/deliver&#34;&gt; &lt;code&gt;deliver&lt;/code&gt; &lt;/a&gt;：将你的应用、截图、元数据上传到App Store&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/snapshot&#34;&gt; &lt;code&gt;snapshot&lt;/code&gt; &lt;/a&gt;：将你iOS应用在每一种设备上进行本地化自动截图&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/frameit&#34;&gt; &lt;code&gt;frameit&lt;/code&gt; &lt;/a&gt;：快速将你的截图放入到适合的设备框中&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/pem&#34;&gt; &lt;code&gt;pem&lt;/code&gt; &lt;/a&gt;自动生成和更新你的推送通知证书&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/sigh&#34;&gt; &lt;code&gt;sigh&lt;/code&gt; &lt;/a&gt;：管理你的 provisioning profiles&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/produce&#34;&gt; &lt;code&gt;produce&lt;/code&gt; &lt;/a&gt;：使用命令行工具在 iTunes Connect 和 Dev Portal 上创建新的iOS应用&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/cert&#34;&gt; &lt;code&gt;cert&lt;/code&gt; &lt;/a&gt;：自动创建和维护iOS的 code signing certificates&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/spaceship&#34;&gt; &lt;code&gt;spaceship&lt;/code&gt; &lt;/a&gt;：一个 Ruby library，自动连接 Apple Dev Center 和 iTunes Connect&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/boarding&#34;&gt; &lt;code&gt;boarding&lt;/code&gt; &lt;/a&gt;：邀请你 TestFlight 的beta测试人员的最简单方式&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/gym&#34;&gt; &lt;code&gt;gym&lt;/code&gt; &lt;/a&gt;：构建你iOS应用程序&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/scan&#34;&gt; &lt;code&gt;scan&lt;/code&gt; &lt;/a&gt;：为你iOS和Mac应用运行测试的最简单方法&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/match&#34;&gt; &lt;code&gt;match&lt;/code&gt; &lt;/a&gt;：使用Git在你的团队中同步你的 certificates 和 profiles&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/supply&#34;&gt; &lt;code&gt;supply&lt;/code&gt; &lt;/a&gt;：将你的Android应用和数据上传到 Google Play&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/screengrab&#34;&gt; &lt;code&gt;screengrab&lt;/code&gt; &lt;/a&gt;：Android版&lt;code&gt;snapshot&lt;/code&gt;，一样的功能&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;调试信息&#34;&gt;调试信息&lt;/h2&gt;

&lt;p&gt;如果你遇到了什么问题，你可以使用 &lt;code&gt;verbose&lt;/code&gt; 模式来获取更多细节的输出：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;pilot --verbose
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;防火墙问题&#34;&gt;防火墙问题&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;pilot&lt;/code&gt; 使用 iTunes Transporter 上传元数据和二进制。以防万一被防火墙挡住，你可以指定不同的传输协议，使用如下命令：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;DELIVER_ITMSTRANSPORTER_ADDITIONAL_UPLOAD_PARAMETERS=&amp;quot;-t DAV&amp;quot; pilot ...
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果你使用 &lt;code&gt;pilot&lt;/code&gt; 通过 &lt;a href=&#34;https://github.com/fastlane/fastlane/blob/master/fastlane/docs/Actions.md#pilot&#34;&gt;fastlane action&lt;/a&gt; ，添加如下代码到你的 &lt;code&gt;Fastfile&lt;/code&gt; ：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ENV[&amp;quot;DELIVER_ITMSTRANSPORTER_ADDITIONAL_UPLOAD_PARAMETERS&amp;quot;] = &amp;quot;-t DAV&amp;quot;
pilot...
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;凭证问题&#34;&gt;凭证问题&lt;/h2&gt;

&lt;p&gt;如果你的密码包含特殊字符，&lt;code&gt;pilot&lt;/code&gt; 可能会抛出一个模糊的错误，“你的 Apple ID 或者 密码输入不正确”。最简单的修复方法就是修改你的密码，不包含特殊字符。&lt;/p&gt;

&lt;h2 id=&#34;如何保存我的密码&#34;&gt;如何保存我的密码？&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;pilot&lt;/code&gt; 使用来自 &lt;code&gt;fastlane&lt;/code&gt; 的 &lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/credentials_manager&#34;&gt;CredentialsManager&lt;/a&gt; 管理密码。&lt;/p&gt;

&lt;h1 id=&#34;帮助&#34;&gt;帮助&lt;/h1&gt;

&lt;p&gt;请提交 issue 到 GitHub，并提供你关于设置的信息。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Fastlane - Spaceship</title>
      <link>http://lynchwong.com/2016/06/fastlane---spaceship/</link>
      <pubDate>Tue, 28 Jun 2016 09:03:31 +0000</pubDate>
      
      <guid>http://lynchwong.com/2016/06/fastlane---spaceship/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;说明：翻译的 &lt;code&gt;Spaceship&lt;/code&gt; 的指南，&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/spaceship&#34;&gt; 原文地址 &lt;/a&gt;。
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&#34;http://lynchwong.com/img/FastlaneSpaceship/spaceship.png&#34; alt=&#34;alt text&#34; /&gt;&lt;/p&gt;

&lt;h1 id=&#34;spaceship&#34;&gt;spaceship&lt;/h1&gt;

&lt;p&gt;&lt;code&gt;spaceship&lt;/code&gt; 暴露了 Apple Developer Center 和 iTunes Connect API。这些快速和强大的API已经是 fastlane 的一部分，能够实现更多 fastlane 的高级功能。脚本化 Developer Center 的工作流从未如此简单。&lt;/p&gt;

&lt;h1 id=&#34;spaceship-是什么东西&#34;&gt;spaceship 是什么东西？&lt;/h1&gt;

&lt;p&gt;到现在为止， &lt;a href=&#34;https://fastlane.tools&#34;&gt;fastlane tools&lt;/a&gt; 都是使用的网页抓取的方式与 Apple&amp;rsquo;s Web Services 进行交互。使用 spaceship 只需要一个简单的 HTTP Client 就能直接访问底层的 API。&lt;/p&gt;

&lt;p&gt;使用 spaceship， &lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/sigh&#34;&gt;sigh&lt;/a&gt; 的执行时间从1分钟减少到5秒内。&lt;/p&gt;

&lt;p&gt;spaceship 使用3中不同的API端点的组合，被 Apple Developer Portal 和 Xcode 使用。由于没有为我们提供所有需要的API，所以 spaceship 为你组合了所有的API。 &lt;a href=&#34;More details about the APIs&#34;&gt;关于API的更多细节&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;更多关于为什么 spaceship 有用的说明，查看 &lt;a href=&#34;https://spaceship.airforce&#34;&gt;spaceship.airforce&lt;/a&gt;。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;不管你有多少 App 或者 Certificates，spaceship 都能处理。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;够了，这里是代码：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Spaceship.login

# Create a new app
app = Spaceship.app.create!(bundle_id: &amp;quot;com.krausefx.app&amp;quot;, name: &amp;quot;Spaceship App&amp;quot;)

# Use an existing certificate
cert = Spaceship.certificate.production.all.first

# Create a new provisioning profile
profile = Spaceship.provisioning_profile.app_store.create!(bundle_id: app.bundle_id,
                                                     certificate: cert)

# Print the name and download the new profile
puts &amp;quot;Created Profile &amp;quot; + profile.name
profile.download
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;速度&#34;&gt;速度&lt;/h2&gt;

&lt;p&gt;跟网页抓取比起来，使用 &lt;code&gt;spaceship&lt;/code&gt; 工具有多快？&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://lynchwong.com/img/FastlaneSpaceship/SpaceshipRecording.gif&#34; alt=&#34;alt text&#34; /&gt;&lt;/p&gt;

&lt;h1 id=&#34;安装&#34;&gt;安装&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;sudo gem install spaceship
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;使用&#34;&gt;使用&lt;/h1&gt;

&lt;h2 id=&#34;playground&#34;&gt;Playground&lt;/h2&gt;

&lt;p&gt;尝试 &lt;code&gt;spaceship&lt;/code&gt; ，只需要运行 &lt;code&gt;spaceship&lt;/code&gt; 。然后就会自动启动 &lt;code&gt;spaceship playground&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://lynchwong.com/img/FastlaneSpaceship/Playground.png&#34; alt=&#34;alt text&#34; /&gt;&lt;/p&gt;

&lt;p&gt;这要求你使用 &lt;code&gt;sudo gem install pry&lt;/code&gt; 安装 &lt;code&gt;pry&lt;/code&gt; 。&lt;code&gt;pry&lt;/code&gt; 不会默认安装，因为大部分的 &lt;a href=&#34;https://fastlane.tools&#34;&gt;fastlane&lt;/a&gt; 用户不需要 &lt;code&gt;spaceship playground&lt;/code&gt; 。你可以在 &lt;code&gt;Gemfile&lt;/code&gt; 文件里添加 &lt;code&gt;pry&lt;/code&gt; 依赖。&lt;/p&gt;

&lt;h2 id=&#34;apple-developer-portal-api&#34;&gt;Apple Developer Portal API&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/fastlane/fastlane/blob/master/spaceship/docs/DeveloperPortal.md&#34;&gt;DeveloperPortal.md&lt;/a&gt; 中有示例代码&lt;/p&gt;

&lt;h2 id=&#34;itunes-connect-api&#34;&gt;iTunes Connect API&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/fastlane/fastlane/blob/master/spaceship/docs/iTunesConnect.md&#34;&gt;iTunesConnect.md&lt;/a&gt; 中有示例代码&lt;/p&gt;

&lt;h2 id=&#34;2-step-verification&#34;&gt;2 Step Verification&lt;/h2&gt;

&lt;p&gt;如果你的苹果账户开启了两步验证，将会自动询问你使用手机进行验证。结果会话将会存储在 &lt;code&gt;~/.spaceship/[email]/cookie&lt;/code&gt; 。这个会话在一个月内是有效的，当然没有办法真的等到一个月后来测试。&lt;/p&gt;

&lt;p&gt;由于你的 CI 系统可能不允许你输入值(比如验证码)，你可以使用 &lt;code&gt;spaceauth&lt;/code&gt; ：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;spaceauth -u apple@krausefx.com
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这个将会给你授权，并提供一个字符串，可以传给你的 CI 系统：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;export FASTLANE_SESSION=&#39;---\n- !ruby/object:HTTP::Cookie\n  name: DES5c148586dfd451e55afbaaa5f62418f91\n  value: HSARMTKNSRVTWFla1+yO4gVPowH17VaaaxPFnUdMUegQZxqy1Ie1c2v6bM1vSOzIbuOmrl/FNenlScsd/NbF7/Lw4cpnL15jsyg0TOJwP32tC/NguPiyOaaaU+jrj4tf4uKdIywVaaaFSRVT\n  domain: idmsa.apple.com\n  for_domain: true\n  path: &amp;quot;/&amp;quot;\n  secure: true\n  httponly: true\n  expires: 2016-04-27 23:55:56.000000000 Z\n  max_age: \n  created_at: 2016-03-28 16:55:57.032086000 -07:00\n  accessed_at: 2016-03-28 19:11:17.828141000 -07:00\n&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;从 &lt;code&gt;---\n&lt;/code&gt; 开始复制所有的东西到你的 CI 服务器，然后当做环境变量提供，变量名是 &lt;code&gt;FASTLANE_SESSION&lt;/code&gt; 。&lt;/p&gt;

&lt;h2 id=&#34;spaceship-in-use&#34;&gt;Spaceship in use&lt;/h2&gt;

&lt;p&gt;很多 &lt;a href=&#34;https://fastlane.tools&#34;&gt;fastlane tools&lt;/a&gt; 已经使用了 &lt;code&gt;spaceship&lt;/code&gt;，比如 &lt;code&gt;sigh&lt;/code&gt;， &lt;code&gt;cert&lt;/code&gt;， &lt;code&gt;produce&lt;/code&gt;， &lt;code&gt;pilot&lt;/code&gt; 和 &lt;code&gt;boarding&lt;/code&gt; 。&lt;/p&gt;

&lt;h1 id=&#34;技术细节&#34;&gt;技术细节&lt;/h1&gt;

&lt;h2 id=&#34;http-client&#34;&gt;HTTP Client&lt;/h2&gt;

&lt;p&gt;到现在为止，所有的 &lt;a href=&#34;https://fastlane.tools&#34;&gt;fastlane tools&lt;/a&gt; 都是使用的网页抓取的方式与 Apple&amp;rsquo;s Web Services 进行交互。spaceship 使用一个简单的 HTTP Client ，更少的开销，更快的速度。&lt;/p&gt;

&lt;p&gt;跟网页抓取比起来，&lt;code&gt;spaceship&lt;/code&gt; 的优势：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;快90%&lt;/li&gt;
&lt;li&gt;不需要再加载图像、HTML、JS 以及 CSS文件&lt;/li&gt;
&lt;li&gt;通过稳定的服务器响应，更广的测试覆盖率&lt;/li&gt;
&lt;li&gt;能够应对 Apple Developer Portal 的设计变更&lt;/li&gt;
&lt;li&gt;当请求超时，会自动重试&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;api-endpoints&#34;&gt;API Endpoints&lt;/h2&gt;

&lt;p&gt;这里不会深入讲解各种API，只是给一些参考：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;https://idmsa.apple.com&lt;/code&gt;：用来授权，获取有效的会话&lt;/li&gt;
&lt;li&gt;&lt;code&gt;https://developerservices2.apple.com&lt;/code&gt;：

&lt;ul&gt;
&lt;li&gt;获取可用的 Provisioning Profiles 的详细列表&lt;/li&gt;
&lt;li&gt;这个API会返回每个 Profiles 的设备，Certificates 和 App&lt;/li&gt;
&lt;li&gt;注册新的设备&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;https://developer.apple.com&lt;/code&gt;：

&lt;ul&gt;
&lt;li&gt;列出所有设备，Certificates，Apps 和 App Groups&lt;/li&gt;
&lt;li&gt;创建新的Certificates，Provisioning Profiles 和 Apps&lt;/li&gt;
&lt;li&gt;禁用/开启 应用的服务，然后赋值给 App Groups&lt;/li&gt;
&lt;li&gt;删除Certificates 和 Apps&lt;/li&gt;
&lt;li&gt;修复 Provisioning Profiles&lt;/li&gt;
&lt;li&gt;下载 Provisioning Profiles&lt;/li&gt;
&lt;li&gt;团队选择&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;https://itunesconnect.apple.com&lt;/code&gt;：

&lt;ul&gt;
&lt;li&gt;管理应用&lt;/li&gt;
&lt;li&gt;管理测试用户&lt;/li&gt;
&lt;li&gt;提交更新进行审核&lt;/li&gt;
&lt;li&gt;管理应用的元数据&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;https://du-itc.itunesconnect.apple.com&lt;/code&gt;：

&lt;ul&gt;
&lt;li&gt;上传 图标、截图、trailers&amp;hellip;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;spaceship&lt;/code&gt; 使用所有这些API提供了所有功能的无缝体验。&lt;/p&gt;

&lt;h2 id=&#34;magic-involved&#34;&gt;Magic involved&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;spaceship&lt;/code&gt; 做了许多魔法的事情来让所有的工作都很整洁：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;合理的默认值：&lt;/strong&gt;你只需要提供那些强制性的信息(比如新的 Provisioning Profiles，默认包含所有设备)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;本地验证：&lt;/strong&gt;将所有的改变推送到 Apple Dev Portal 的时候，&lt;code&gt;spaceship&lt;/code&gt; 会确保只有有效的数据发送给 Apple (比如自动修复了的 Provisioning Profiles)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;各种请求响应类型：&lt;/strong&gt;当处理不同的API的时候，&lt;code&gt;spaceship&lt;/code&gt; 必需处理 &lt;code&gt;JSON&lt;/code&gt;，&lt;code&gt;XML&lt;/code&gt;，&lt;code&gt;txt&lt;/code&gt;，&lt;code&gt;plist&lt;/code&gt;，有时甚至包括 HTML 的请求和响应&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;自动分页：&lt;/strong&gt;即使你有上千个App、Profiles 或者 Certificates，&lt;code&gt;spaceship&lt;/code&gt; 都会为你处理。是经过测试的。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Session, Cookie and CSRF token：&lt;/strong&gt;&lt;code&gt;spaceship&lt;/code&gt; 处理了安全的各个方面。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Profile Magic：&lt;/strong&gt;创建上传 Code Signing Requests，所有的都由&lt;code&gt;spaceship&lt;/code&gt; 处理&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Multiple Spaceship：&lt;/strong&gt;你可以使用不同的苹果账户来登录多个 &lt;code&gt;spaceship&lt;/code&gt;，用来同步注册的设备&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Fastlane - Cert</title>
      <link>http://lynchwong.com/2016/06/fastlane---cert/</link>
      <pubDate>Tue, 28 Jun 2016 08:46:19 +0000</pubDate>
      
      <guid>http://lynchwong.com/2016/06/fastlane---cert/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;说明：翻译的 &lt;code&gt;Cert&lt;/code&gt; 的指南，&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/cert&#34;&gt; 原文地址 &lt;/a&gt;。
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&#34;http://lynchwong.com/img/FastlaneCert/cert.png&#34; alt=&#34;alt text&#34; /&gt;&lt;/p&gt;

&lt;h1 id=&#34;cert&#34;&gt;cert&lt;/h1&gt;

&lt;p&gt;自动创建维护 iOS 的 Code Signing Certificates 。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;cert&lt;/code&gt; 只专注于 Code Signing 。你可以为不同的环境(development 和 distribution)创建新的 Code Signing identities 然后使用任何已经存在的有效的 Certificates 替换本地的。&lt;/p&gt;

&lt;h1 id=&#34;安装&#34;&gt;安装&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;注意：&lt;/strong&gt;根据 &lt;a href=&#34;https://codesigning.guide&#34;&gt;codesigning.guide&lt;/a&gt; 推荐使用 &lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/match&#34;&gt;match&lt;/a&gt; 来生成维护你的 Certificates 。&lt;/p&gt;

&lt;p&gt;如果你想完整的控制要发生的事情以及知道 Codesigning 的更多知识，可以直接使用 &lt;code&gt;cert&lt;/code&gt; 。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo gem install cert
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;确保你已经安装了 Xcode 最新版本的命令行工具：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;xcode-select --install
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;为什么使用&#34;&gt;为什么使用？&lt;/h1&gt;

&lt;p&gt;请查看 &lt;a href=&#34;https://github.com/fastlane/fastlane/blob/master/cert/ManualSteps.md&#34;&gt;this guide&lt;/a&gt; ，向你演示了如何使用 Apple Developer Portal 手动创建 iOS Code Signing Profile 和 Provisioning Profile 。&lt;/p&gt;

&lt;p&gt;查看完成&lt;strong&gt;之后&lt;/strong&gt;，再看 &lt;code&gt;cert&lt;/code&gt; 和 &lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/sigh&#34;&gt;&lt;code&gt;sigh&lt;/code&gt;&lt;/a&gt; 如何为你做这些工作。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://lynchwong.com/img/FastlaneCert/cert.gif&#34; alt=&#34;alt text&#34; /&gt;&lt;/p&gt;

&lt;p&gt;如上所示，我使用了 &lt;code&gt;cert &amp;amp;&amp;amp; sigh&lt;/code&gt; ，首先会创建 iOS Code Signing Certificate ，如果 &lt;code&gt;cert&lt;/code&gt; 成功，然后会为你的 App 创建 Provisioning Profile 。&lt;/p&gt;

&lt;h1 id=&#34;使用&#34;&gt;使用&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;cert
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这个会检测你本地机器是否已经安装了可用的 Signing Certificates 。&lt;/p&gt;

&lt;p&gt;如果需要创建新的 Certificate ，&lt;code&gt;cert&lt;/code&gt; 会做如下事情：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;创建新的 Private Key&lt;/li&gt;
&lt;li&gt;创建新的 Signing Request&lt;/li&gt;
&lt;li&gt;生成、下载、安装 Certificate&lt;/li&gt;
&lt;li&gt;导入所有生成的文件到你的 Keychain&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;cert&lt;/code&gt; 永远不会废除(revoke)你已经存在的 Certificates 。如果不能再创建任何新的 Certificates，&lt;code&gt;cert&lt;/code&gt; 会产生一个异常，意味着你必需废除(revoke)一个已经存在的 Certificates 给新的腾出空间。&lt;/p&gt;

&lt;p&gt;你可以传递你的 Apple ID：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cert -u cert@krausefx.com
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;可用的命令：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cert --help
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;记住，&lt;code&gt;cert&lt;/code&gt; 没有办法从 Apple Develop Portal 下载已经存在的 Certificates 和 Private Keys ，因为 Private Key 永远不会离开?(leaves)你的电脑。&lt;/p&gt;

&lt;h2 id=&#34;环境变量&#34;&gt;环境变量&lt;/h2&gt;

&lt;p&gt;运行 &lt;code&gt;cert --help&lt;/code&gt; 列出所有可用的环境变量的列表。&lt;/p&gt;

&lt;h2 id=&#34;和-sigh-https-github-com-fastlane-fastlane-tree-master-sigh-一起使用&#34;&gt;和 &lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/sigh&#34;&gt;&lt;code&gt;sigh&lt;/code&gt;&lt;/a&gt; 一起使用&lt;/h2&gt;

&lt;p&gt;当 &lt;code&gt;cert&lt;/code&gt; 和 &lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/fastlane&#34;&gt;&lt;code&gt;fastlane&lt;/code&gt;&lt;/a&gt; 中的 &lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/sigh&#34;&gt;&lt;code&gt;sigh&lt;/code&gt;&lt;/a&gt; 组合使用时就变的很有趣了。&lt;/p&gt;

&lt;p&gt;更新你的 &lt;code&gt;Fastfile&lt;/code&gt; 包含如下代码：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;lane :beta do
    cert
    sigh(force: true)
end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;force: true&lt;/code&gt; 会确保在每次运行的时候都会重新生成 Provisioning Profile 。这会导致 &lt;code&gt;sigh&lt;/code&gt; 始终使用的是对的 Signing Certificate，会安装在本地机器上。&lt;/p&gt;

&lt;h2 id=&#34;如何存储我的密码&#34;&gt;如何存储我的密码？&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;cert&lt;/code&gt; 使用来自 &lt;code&gt;fastlane&lt;/code&gt; 的 &lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/credentials_manager&#34;&gt;password manager&lt;/a&gt;。查看 &lt;a href=&#34;https://github.com/fastlane/fastlane/blob/master/credentials_manager/README.md&#34;&gt;CredentialsManager README&lt;/a&gt;获取更多信息。&lt;/p&gt;

&lt;h1 id=&#34;提示&#34;&gt;提示&lt;/h1&gt;

&lt;h2 id=&#34;fastlane-工具链&#34;&gt;&lt;code&gt;fastlane&lt;/code&gt;工具链&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://fastlane.tools&#34;&gt; &lt;code&gt;fastlane&lt;/code&gt; &lt;/a&gt;：自动化构建和发布你 iOS 和 Android 应用程序的最简单方法&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/deliver&#34;&gt; &lt;code&gt;deliver&lt;/code&gt; &lt;/a&gt;：将你的应用、截图、元数据上传到App Store&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/snapshot&#34;&gt; &lt;code&gt;snapshot&lt;/code&gt; &lt;/a&gt;：将你iOS应用在每一种设备上进行本地化自动截图&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/frameit&#34;&gt; &lt;code&gt;frameit&lt;/code&gt; &lt;/a&gt;：快速将你的截图放入到适合的设备框中&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/pem&#34;&gt; &lt;code&gt;pem&lt;/code&gt; &lt;/a&gt;自动生成和更新你的推送通知证书&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/sigh&#34;&gt; &lt;code&gt;sigh&lt;/code&gt; &lt;/a&gt;：管理你的 provisioning profiles&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/produce&#34;&gt; &lt;code&gt;produce&lt;/code&gt; &lt;/a&gt;：使用命令行工具在 iTunes Connect 和 Dev Portal 上创建新的iOS应用&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/spaceship&#34;&gt; &lt;code&gt;spaceship&lt;/code&gt; &lt;/a&gt;：一个 Ruby library，自动连接 Apple Dev Center 和 iTunes Connect&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/pilot&#34;&gt; &lt;code&gt;pilot&lt;/code&gt; &lt;/a&gt;：管理你TestFlight测试人员的最好方式，使用终端构建&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/boarding&#34;&gt; &lt;code&gt;boarding&lt;/code&gt; &lt;/a&gt;：邀请你 TestFlight 的beta测试人员的最简单方式&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/gym&#34;&gt; &lt;code&gt;gym&lt;/code&gt; &lt;/a&gt;：构建你iOS应用程序&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/scan&#34;&gt; &lt;code&gt;scan&lt;/code&gt; &lt;/a&gt;：为你iOS和Mac应用运行测试的最简单方法&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/match&#34;&gt; &lt;code&gt;match&lt;/code&gt; &lt;/a&gt;：使用Git在你的团队中同步你的 certificates 和 profiles&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/supply&#34;&gt; &lt;code&gt;supply&lt;/code&gt; &lt;/a&gt;：将你的Android应用和数据上传到 Google Play&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/screengrab&#34;&gt; &lt;code&gt;screengrab&lt;/code&gt; &lt;/a&gt;：Android版&lt;code&gt;snapshot&lt;/code&gt;，一样的功能&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;使用-provisioning-quicklook-plugin&#34;&gt;使用&amp;rsquo;Provisioning Quicklook plugin&amp;rsquo;&lt;/h2&gt;

&lt;p&gt;下载安装 &lt;a href=&#34;https://github.com/chockenberry/Provisioning&#34;&gt;Provisioning Plugin&lt;/a&gt; ，方便查看 Provisioning Profile files 和 Certificates 。&lt;/p&gt;

&lt;h1 id=&#34;帮助&#34;&gt;帮助&lt;/h1&gt;

&lt;p&gt;请提交 issue 到 GitHub，并提供你关于设置的信息。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Fastlane - Produce</title>
      <link>http://lynchwong.com/2016/06/fastlane---produce/</link>
      <pubDate>Mon, 27 Jun 2016 17:24:12 +0000</pubDate>
      
      <guid>http://lynchwong.com/2016/06/fastlane---produce/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;说明：翻译的 &lt;code&gt;Produce&lt;/code&gt; 的指南，&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/produce&#34;&gt; 原文地址 &lt;/a&gt;。
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&#34;http://lynchwong.com/img/FastlaneProduce/produce.png&#34; alt=&#34;alt text&#34; /&gt;&lt;/p&gt;

&lt;h1 id=&#34;produce&#34;&gt;produce&lt;/h1&gt;

&lt;p&gt;使用你的命令行工具在 iTunes Connect 和 Dev Portal 上创建新的iOS应用。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;produce&lt;/code&gt; 会使用最少的信息在 Apple Developer Portal 和 iTunes Connect 上创建新的iOS应用。&lt;/p&gt;

&lt;h1 id=&#34;功能&#34;&gt;功能&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;在 iTunes Connect 和 Dev Portal 上&lt;strong&gt;创建&lt;/strong&gt;新的应用&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;修改&lt;/strong&gt; Apple Developer Portal 上的应用服务&lt;/li&gt;
&lt;li&gt;在 Apple Developer Portal 上&lt;strong&gt;创建&lt;/strong&gt; App Groups&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;关联&lt;/strong&gt; Apple Developer Portal 上的应用和 App Groups&lt;/li&gt;
&lt;li&gt;支持&lt;strong&gt;多个苹果帐号&lt;/strong&gt;，你的证书安全的存储在 Keychain 中&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;安装&#34;&gt;安装&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;sudo gem install produce
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;使用&#34;&gt;使用&lt;/h1&gt;

&lt;h2 id=&#34;创建新的应用程序&#34;&gt;创建新的应用程序&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;produce
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;列出可用的参数列表：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;produce --help

Commands:
    associate_group  Associate with a group, which is create if needed or simply located otherwise
    create           Creates a new app on iTunes Connect and the Apple Developer Portal
    disable_services Disable specific Application Services for a specific app on the Apple Developer Portal
    enable_services  Enable specific Application Services for a specific app on the Apple Developer Portal
    group            Ensure that a specific App Group exists
    help             Display global or [command] help documentation

Global Options:
    -u, --username STRING Your Apple ID Username (PRODUCE_USERNAME)
    -a, --app_identifier STRING App Identifier (Bundle ID, e.g. com.krausefx.app) (PRODUCE_APP_IDENTIFIER)
    -e, --bundle_identifier_suffix STRING App Identifier Suffix (Ignored if App Identifier does not ends with .*) (PRODUCE_APP_IDENTIFIER_SUFFIX)
    -q, --app_name STRING App Name (PRODUCE_APP_NAME)
    -z, --app_version STRING Initial version number (e.g. &#39;1.0&#39;) (PRODUCE_VERSION)
    -y, --sku STRING     SKU Number (e.g. &#39;1234&#39;) (PRODUCE_SKU)
    -m, --language STRING Primary Language (e.g. &#39;English&#39;, &#39;German&#39;) (PRODUCE_LANGUAGE)
    -c, --company_name STRING The name of your company. Only required if it&#39;s the first app you create (PRODUCE_COMPANY_NAME)
    -i, --skip_itc       Skip the creation of the app on iTunes Connect (PRODUCE_SKIP_ITC)
    -d, --skip_devcenter  Skip the creation of the app on the Apple Developer Portal (PRODUCE_SKIP_DEVCENTER)
    -b, --team_id STRING The ID of your team if you&#39;re in multiple teams (PRODUCE_TEAM_ID)
    -l, --team_name STRING The name of your team if you&#39;re in multiple teams (PRODUCE_TEAM_NAME)
    -h, --help           Display help documentation
    -v, --version        Display version information
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;启用-禁用应用程序服务&#34;&gt;启用／禁用应用程序服务&lt;/h2&gt;

&lt;p&gt;如果你想要为一个 App ID 启用应用程序服务(Application Services)，这个例子中是 HomeKit 和 HealthKit：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;produce enable_services --homekit --healthkit
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果你想为一个 App ID 禁用应用程序服务，这个例子中是 iCloud：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;produce disable_service --icloud
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果你想创建新的 App Group：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;produce group -g group.krausefx -n &amp;quot;Example App Group&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果你想关联应用和 App Group：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;produce associate_group -a com.krausefx.app group.krausefx
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;参数&#34;&gt;参数&lt;/h2&gt;

&lt;p&gt;获取可使用的选项列表：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;produce enable_services --help

--app-group          Enable App Groups
--associated-domains Enable Associated Domains
--data-protection STRING Enable Data Protection, suitable values are &amp;quot;complete&amp;quot;, &amp;quot;unlessopen&amp;quot; and &amp;quot;untilfirstauth&amp;quot;
--healthkit          Enable HealthKit
--homekit            Enable HomeKit
--wireless-conf      Enable Wireless Accessory Configuration
--icloud STRING      Enable iCloud, suitable values are &amp;quot;legacy&amp;quot; and &amp;quot;cloudkit&amp;quot;
--inter-app-audio    Enable Inter-App-Audio
--passbook           Enable Passbook
--push-notification  Enable Push notification (only enables the service, does not configure certificates)
--vpn-conf           Enable VPN Configuration

produce disable_services --help

--app-group          Disable App Groups
--associated-domains Disable Associated Domains
--data-protection    Disable Data Protection
--healthkit          Disable HealthKit
--homekit            Disable HomeKit
--wireless-conf      Disable Wireless Accessory Configuration
--icloud             Disable iCloud
--inter-app-audio    Disable Inter-App-Audio
--passbook           Disable Passbook
--push-notification  Disable Push notifications
--vpn-conf           Disable VPN Configuration
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;环境变量&#34;&gt;环境变量&lt;/h2&gt;

&lt;p&gt;所有可用的值也可以使用环境变量传递，运行 &lt;code&gt;produce --help&lt;/code&gt; 来获取所有可用参数的列表。&lt;/p&gt;

&lt;h2 id=&#34;fastlane-https-github-com-fastlane-fastlane-tree-master-fastlane-整合&#34;&gt;&lt;code&gt;[fastlane](https://github.com/fastlane/fastlane/tree/master/fastlane)&lt;/code&gt; 整合&lt;/h2&gt;

&lt;p&gt;你的 &lt;code&gt;fastlane&lt;/code&gt; 看起来应该是这样的：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;lane :appstore do
    produce(
        username: &#39;felix@krausefx.com&#39;,
        app_identifier: &#39;com.krausefx.app&#39;,
        app_name: &#39;MyApp&#39;,
        language: &#39;English&#39;,
        app_version: &#39;1.0&#39;,
        sku: &#39;123&#39;,
        team_name: &#39;SunApps GmbH&#39; # only necessary when in multiple teams
    )

    deliver
end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;为了在 &lt;code&gt;deliver&lt;/code&gt; 中使用你新生成的应用，你需要将下面的代码添加到 &lt;code&gt;Deliverfile&lt;/code&gt; 文件中：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;apple_id ENV[&#39;PRODUCE_APPLE_ID&#39;]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;当应用程序还在 App Store 中不可用的时候，这会告诉 &lt;code&gt;deliver&lt;/code&gt; 使用哪一个 App ID 。&lt;/p&gt;

&lt;p&gt;你仍然必需填写剩余的信息(比如截图，应用描述及价格)。你可以使用 &lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/deliver&#34;&gt;deliver&lt;/a&gt; 和 CLI 上传应用的元数据。&lt;/p&gt;

&lt;h2 id=&#34;如何存储我的密码&#34;&gt;如何存储我的密码？&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;produce&lt;/code&gt; 使用来自 &lt;code&gt;fastlane&lt;/code&gt; 的 &lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/credentials_manager&#34;&gt;password manager&lt;/a&gt;。查看 &lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/credentials_manager&#34;&gt;CredentialsManager README&lt;/a&gt; 获取更多信息。&lt;/p&gt;

&lt;h1 id=&#34;提示&#34;&gt;提示&lt;/h1&gt;

&lt;h2 id=&#34;fastlane-工具链&#34;&gt;&lt;code&gt;fastlane&lt;/code&gt;工具链&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://fastlane.tools&#34;&gt; &lt;code&gt;fastlane&lt;/code&gt; &lt;/a&gt;：自动化构建和发布你 iOS 和 Android 应用程序的最简单方法&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/deliver&#34;&gt; &lt;code&gt;deliver&lt;/code&gt; &lt;/a&gt;：将你的应用、截图、元数据上传到App Store&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/snapshot&#34;&gt; &lt;code&gt;snapshot&lt;/code&gt; &lt;/a&gt;：将你iOS应用在每一种设备上进行本地化自动截图&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/frameit&#34;&gt; &lt;code&gt;frameit&lt;/code&gt; &lt;/a&gt;：快速将你的截图放入到适合的设备框中&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/pem&#34;&gt; &lt;code&gt;pem&lt;/code&gt; &lt;/a&gt;：自动生成和更新你的推送通知证书&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/sigh&#34;&gt; &lt;code&gt;sigh&lt;/code&gt; &lt;/a&gt;：管理你的 provisioning profiles&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/cert&#34;&gt; &lt;code&gt;cert&lt;/code&gt; &lt;/a&gt;：自动创建和维护iOS的 code signing certificates&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/spaceship&#34;&gt; &lt;code&gt;spaceship&lt;/code&gt; &lt;/a&gt;：一个 Ruby library，自动连接 Apple Dev Center 和 iTunes Connect&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/pilot&#34;&gt; &lt;code&gt;pilot&lt;/code&gt; &lt;/a&gt;：管理你TestFlight测试人员的最好方式，使用终端构建&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/boarding&#34;&gt; &lt;code&gt;boarding&lt;/code&gt; &lt;/a&gt;：邀请你 TestFlight 的beta测试人员的最简单方式&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/gym&#34;&gt; &lt;code&gt;gym&lt;/code&gt; &lt;/a&gt;：构建你iOS应用程序&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/scan&#34;&gt; &lt;code&gt;scan&lt;/code&gt; &lt;/a&gt;：为你iOS和Mac应用运行测试的最简单方法&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/match&#34;&gt; &lt;code&gt;match&lt;/code&gt; &lt;/a&gt;：使用Git在你的团队中同步你的 certificates 和 profiles&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/supply&#34;&gt; &lt;code&gt;supply&lt;/code&gt; &lt;/a&gt;：将你的Android应用和数据上传到 Google Play&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/screengrab&#34;&gt; &lt;code&gt;screengrab&lt;/code&gt; &lt;/a&gt;：Android版&lt;code&gt;snapshot&lt;/code&gt;，一样的功能&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;帮助&#34;&gt;帮助&lt;/h1&gt;

&lt;p&gt;请提交 issue 到 GitHub，并提供你关于设置的信息。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Fastlane - Sigh</title>
      <link>http://lynchwong.com/2016/06/fastlane---sigh/</link>
      <pubDate>Mon, 27 Jun 2016 12:39:46 +0000</pubDate>
      
      <guid>http://lynchwong.com/2016/06/fastlane---sigh/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;说明：翻译的 &lt;code&gt;Sigh&lt;/code&gt; 的指南，&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/sigh&#34;&gt; 原文地址 &lt;/a&gt;。
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&#34;http://lynchwong.com/img/FastlaneSigh/sigh.png&#34; alt=&#34;alt text&#34; /&gt;&lt;/p&gt;

&lt;h1 id=&#34;sigh&#34;&gt;sigh&lt;/h1&gt;

&lt;p&gt;因为你宁愿把时间花在其它方面，也不要花在和 Provisioning 文件作斗争上。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;sigh&lt;/code&gt;可以创建、更新、下载和修复 Provisioning Profiles(只需一条命令)。它支持 App Store，Ad Hoc，Development 和 Enterprise Profiles 以及一些很棒的功能，比如自动添加所有的测试设备。&lt;/p&gt;

&lt;h1 id=&#34;功能&#34;&gt;功能&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;为你的应用程序 &lt;strong&gt;下载&lt;/strong&gt; 最新的 Provisioning Profile&lt;/li&gt;
&lt;li&gt;当 Provisioning Profile 过期的时候会 &lt;strong&gt;更新&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;当 Provisioning Profile 损坏的时候会 &lt;strong&gt;修复&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;如果不存在 Provisioning Profile 就会 &lt;strong&gt;创建&lt;/strong&gt; 一个新的&lt;/li&gt;
&lt;li&gt;支持 &lt;strong&gt;App Store&lt;/strong&gt;，&lt;strong&gt;Ad Hoc&lt;/strong&gt; 和 &lt;strong&gt;Development&lt;/strong&gt; Profiles&lt;/li&gt;
&lt;li&gt;支持 &lt;strong&gt;多个苹果账户&lt;/strong&gt;，你的证书(Credentials)安装的存储在Keychain中&lt;/li&gt;
&lt;li&gt;支持 &lt;strong&gt;多个团队&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;支持 &lt;strong&gt;Enterprise Profiles&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;自动管理iOS的推送证书，你可以使用&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/pem&#34;&gt; pem &lt;/a&gt;。&lt;/p&gt;

&lt;h2 id=&#34;为什么不让-xcode-做这些工作&#34;&gt;为什么不让 Xcode 做这些工作？&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sigh&lt;/code&gt;可以很容易的集成到你的 CI-server(e.g. Jenkins)&lt;/li&gt;
&lt;li&gt;Xcode 有时会让 &lt;a href=&#34;https://github.com/fastlane/fastlane/blob/master/sigh/assets/SignErrors.png&#34;&gt;所有存在的 Profiles&lt;/a&gt; 失效&lt;/li&gt;
&lt;li&gt;你可以对发生的事情进行控制&lt;/li&gt;
&lt;li&gt;你仍然可以获取到 Signing Files，可用于你的脚本文件或者存储在Git中&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;参见&lt;code&gt;sigh&lt;/code&gt;的执行：&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://lynchwong.com/img/FastlaneSigh/sighRecording.gif&#34; alt=&#34;alt text&#34; /&gt;&lt;/p&gt;

&lt;h1 id=&#34;安装&#34;&gt;安装&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;注意:&lt;/strong&gt;根据 &lt;a href=&#34;https://codesigning.guide&#34;&gt;codesigning.guide&lt;/a&gt;，生成和维护你的 Provisioning Profiles，我们推荐使用 &lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/match&#34;&gt;match&lt;/a&gt;。如果你想完整的控制要发生的事情以及知道Codesigning的更多知识，可以直接使用&lt;code&gt;sigh&lt;/code&gt;。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo gem install sigh
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;确保你已经安装了 Xcode 最新版本的命令行工具：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;xcode-select --install
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;使用&#34;&gt;使用&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;sigh
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;是的，这就是所有的命令！&lt;/p&gt;

&lt;p&gt;&lt;code&gt;sigh&lt;/code&gt;默认会为 App Store 创建、修复和下载 Profiles。&lt;/p&gt;

&lt;p&gt;你可以像如下这样传递 Bundle identifier 和 username：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sigh -a com.krausefx.app -u username
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果你想生成 &lt;strong&gt;Ad Hoc&lt;/strong&gt; 的Profile 替代 App Store 的Profile：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sigh --adhoc
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Development&lt;/strong&gt; Profile：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sigh --development
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;在指定的目录生成 Profile：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sigh -o &amp;quot;~/Certificates/&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;下载你所有的 Provisioning Profiles：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sigh download_all
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;列出所有可用的参数和命令：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sigh --help
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;高级&#34;&gt;高级&lt;/h2&gt;

&lt;p&gt;默认 &lt;code&gt;sigh&lt;/code&gt; 会在你的机器上安装下载的 Profile。如果你只想生成 Profile 跳过安装，使用如下标志：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sigh --skip_install
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;使用指定的名字保存 Provisioning Profile，使用 -q 选项：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sigh -a com.krausefx.app -u username -q &amp;quot;myProfile.mobileprovision&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;出于某些原因，你不想 &lt;code&gt;sigh&lt;/code&gt; 验证安装在你本地机器上的 Code Signing identity：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sigh --skip_certificate_verification
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果你需要 Provisioning Profile 更新，而不管是什么状态，使用 &lt;code&gt;--force&lt;/code&gt; 选项。这会给你的 Profile 最大的生命周期。&lt;code&gt;--force&lt;/code&gt; 也会将所有可用的设备添加到这个Profile。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sigh --force
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;默认情况下，&lt;code&gt;sigh&lt;/code&gt;会在 Development Profiles 上包含所有的 Certificates，第一个 Certificate 是其它类型的。如果你需要指定使用哪一个 Certificate ，你可以使用环境变量 &lt;code&gt;SIGH_CERTIFICATE&lt;/code&gt;，或者传递 Certificate 的 name 或者 expiry date 当做参数：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sigh -c &amp;quot;SunApps GmbH&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;列出可用的参数和命令：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sigh --help
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;和-fastlane-https-github-com-fastlane-fastlane-tree-master-fastlane-一起使用&#34;&gt;和&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/fastlane&#34;&gt; &lt;code&gt;fastlane&lt;/code&gt; &lt;/a&gt;一起使用&lt;/h2&gt;

&lt;p&gt;当和&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/fastlane&#34;&gt; &lt;code&gt;fastlane&lt;/code&gt; &lt;/a&gt;中的&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/cert&#34;&gt; &lt;code&gt;cert&lt;/code&gt; &lt;/a&gt;一起使用时 &lt;code&gt;sigh&lt;/code&gt; 就变的很有趣了。&lt;/p&gt;

&lt;p&gt;更新你的 &lt;code&gt;Fastfile&lt;/code&gt; 文件包含如下代码：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;lane :beta do
    cert
    sigh(force: true)
end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;force: true&lt;/code&gt; 会确保在每次运行的时候都会重新生成 Provisioning Profile 。这会保证 &lt;code&gt;sigh&lt;/code&gt; 始终使用正确的 Signing Certificate ，会安装在本地机器上。&lt;/p&gt;

&lt;h2 id=&#34;修复-repair&#34;&gt;修复(Repair)&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;sigh&lt;/code&gt; 会自动修复你那些已经存在并且过期或者无效的所有 Provisioning Profiles 。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sigh repair
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;重新签名-resign&#34;&gt;重新签名(Resign)&lt;/h1&gt;

&lt;p&gt;如果你生成了 &lt;code&gt;ipa&lt;/code&gt; 文件，但是想给 ipa 文件应用不同的 Code Signing，你可以使用 &lt;code&gt;sigh resign&lt;/code&gt;：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sigh resign
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果 ipa 文件和 Provisioning Profile 位于当前文件夹，&lt;code&gt;sigh&lt;/code&gt; 会为你找到它们。&lt;/p&gt;

&lt;p&gt;你可以使用命令行传递更多的信息：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sigh resign ./path/app.ipa --signing_identity &amp;quot;iPhone Distribution: Felix Krause&amp;quot; -n &amp;quot;my.mobileprovision&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;管理&#34;&gt;管理&lt;/h2&gt;

&lt;p&gt;使用 &lt;code&gt;sigh manage&lt;/code&gt; ，会列出所有本地安装的 Provisioning Profiles ：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sigh manage
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;删除所有过期的 Provisioning Profiles ：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sigh manage -e
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;或者使用正则表达式删除所有的 &lt;code&gt;iOS Team Provisioning Profile&lt;/code&gt; ：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sigh manage -p &amp;quot;iOS\ ?Team Provisioning Profile:&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;环境变量&#34;&gt;环境变量&lt;/h2&gt;

&lt;p&gt;运行 &lt;code&gt;sigh --help&lt;/code&gt; 列出所有可用的环境变量的列表。&lt;/p&gt;

&lt;p&gt;如果你使用 &lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/cert&#34;&gt;cert&lt;/a&gt; 与 &lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/fastlane&#34;&gt;fastlane&lt;/a&gt;的组合，会自动为你选择 Signing Certificate。(确保在 &lt;code&gt;sigh&lt;/code&gt; 之前运行 &lt;code&gt;cert&lt;/code&gt;)&lt;/p&gt;

&lt;h1 id=&#34;如何工作&#34;&gt;如何工作？&lt;/h1&gt;

&lt;p&gt;&lt;code&gt;sigh&lt;/code&gt; 会访问 &lt;code&gt;iOS Dev Center&lt;/code&gt; 下载、更新或者生成 &lt;code&gt;.mobileprovision&lt;/code&gt;文件。它使用 &lt;a href=&#34;https://spaceship.airforce&#34;&gt;spaceship&lt;/a&gt; 和 Apple&amp;rsquo;s web services 通信。&lt;/p&gt;

&lt;h2 id=&#34;如何存储我的密码&#34;&gt;如何存储我的密码？&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;sigh&lt;/code&gt; 使用来自 &lt;code&gt;fastlane&lt;/code&gt; 的 &lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/credentials_manager&#34;&gt;CredentialsManager&lt;/a&gt;。&lt;/p&gt;

&lt;h1 id=&#34;提示&#34;&gt;提示&lt;/h1&gt;

&lt;h2 id=&#34;fastlane-工具链&#34;&gt;&lt;code&gt;fastlane&lt;/code&gt;工具链&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://fastlane.tools&#34;&gt; &lt;code&gt;fastlane&lt;/code&gt; &lt;/a&gt;：自动化构建和发布你 iOS 和 Android 应用程序的最简单方法&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/deliver&#34;&gt; &lt;code&gt;deliver&lt;/code&gt; &lt;/a&gt;：将你的应用、截图、元数据上传到App Store&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/snapshot&#34;&gt; &lt;code&gt;snapshot&lt;/code&gt; &lt;/a&gt;：将你iOS应用在每一种设备上进行本地化自动截图&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/frameit&#34;&gt; &lt;code&gt;frameit&lt;/code&gt; &lt;/a&gt;：快速将你的截图放入到适合的设备框中&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/pem&#34;&gt; &lt;code&gt;pem&lt;/code&gt; &lt;/a&gt;：自动生成和更新你的推送通知证书&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/produce&#34;&gt; &lt;code&gt;produce&lt;/code&gt; &lt;/a&gt;：使用命令行工具在 iTunes Connect 和 Dev Portal 上创建新的iOS应用&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/cert&#34;&gt; &lt;code&gt;cert&lt;/code&gt; &lt;/a&gt;：自动创建和维护iOS的 code signing certificates&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/spaceship&#34;&gt; &lt;code&gt;spaceship&lt;/code&gt; &lt;/a&gt;：一个 Ruby library，自动连接 Apple Dev Center 和 iTunes Connect&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/pilot&#34;&gt; &lt;code&gt;pilot&lt;/code&gt; &lt;/a&gt;：管理你TestFlight测试人员的最好方式，使用终端构建&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/boarding&#34;&gt; &lt;code&gt;boarding&lt;/code&gt; &lt;/a&gt;：邀请你 TestFlight 的beta测试人员的最简单方式&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/gym&#34;&gt; &lt;code&gt;gym&lt;/code&gt; &lt;/a&gt;：构建你iOS应用程序&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/scan&#34;&gt; &lt;code&gt;scan&lt;/code&gt; &lt;/a&gt;：为你iOS和Mac应用运行测试的最简单方法&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/match&#34;&gt; &lt;code&gt;match&lt;/code&gt; &lt;/a&gt;：使用Git在你的团队中同步你的 certificates 和 profiles&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/supply&#34;&gt; &lt;code&gt;supply&lt;/code&gt; &lt;/a&gt;：将你的Android应用和数据上传到 Google Play&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/screengrab&#34;&gt; &lt;code&gt;screengrab&lt;/code&gt; &lt;/a&gt;：Android版&lt;code&gt;snapshot&lt;/code&gt;，一样的功能&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;使用-provisioning-quicklook-plugin&#34;&gt;使用&amp;rsquo;Provisioning Quicklook plugin&amp;rsquo;&lt;/h2&gt;

&lt;p&gt;下载然后安装 &lt;a href=&#34;https://github.com/chockenberry/Provisioning&#34;&gt;Provisioning Plugin&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;它会像下图这样向你展示 &lt;code&gt;mobileprovision&lt;/code&gt; 文件：&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://lynchwong.com/img/FastlaneSigh/QuickLookScreenshot.png&#34; alt=&#34;alt text&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;找不到-app-identifier&#34;&gt;找不到 App Identifier&lt;/h2&gt;

&lt;p&gt;如果你也想在 Apple Developer Portal 上创建一个新的 App Identifier，查看 &lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/produce&#34;&gt;produce&lt;/a&gt;，它就是做这个的。&lt;/p&gt;

&lt;h2 id=&#34;对-xcode-管理的-profiles-有什么影响&#34;&gt;对 Xcode 管理的 Profiles 有什么影响？&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;sigh&lt;/code&gt; 永远不会触碰或者使用被 Xcode 创建、管理的 Profiles。相反， &lt;code&gt;sigh&lt;/code&gt; 只会管理自己的 Provisioning Profiles 集合。&lt;/p&gt;

&lt;h1 id=&#34;帮助&#34;&gt;帮助？&lt;/h1&gt;

&lt;p&gt;请提交 issue 到 GitHub，并提供你关于设置的信息。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Fastlane - Pem</title>
      <link>http://lynchwong.com/2016/06/fastlane---pem/</link>
      <pubDate>Mon, 27 Jun 2016 10:31:25 +0000</pubDate>
      
      <guid>http://lynchwong.com/2016/06/fastlane---pem/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;说明：翻译的 &lt;code&gt;Pem&lt;/code&gt; 的指南，&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/pem&#34;&gt; 原文地址 &lt;/a&gt;。
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&#34;http://lynchwong.com/img/FastlanePem/pem.png&#34; alt=&#34;alt text&#34; /&gt;&lt;/p&gt;

&lt;h1 id=&#34;pem&#34;&gt;pem&lt;/h1&gt;

&lt;p&gt;自动生成和更新您的推送通知的配置文件。&lt;/p&gt;

&lt;p&gt;厌倦了为你的iOS应用手动创建和维护推送通知的配置文件？厌倦了为你的服务器生成PEM文件？&lt;/p&gt;

&lt;p&gt;只需要简单的运行&lt;code&gt;pem&lt;/code&gt;命令，&lt;code&gt;pem&lt;/code&gt;就会为你做所有的这些工作。&lt;/p&gt;

&lt;p&gt;如果需要一个有效的推送通知的配置文件，&lt;code&gt;pem&lt;/code&gt;会创建新的 .pem， .cer 和 .p12 文件并上传到你的推送服务器。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;pem&lt;/code&gt;不会覆盖上传到你服务器的文件。&lt;/p&gt;

&lt;p&gt;自动管理 iOS Provisioning profiles，你可以使用&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/sigh&#34;&gt; sigh &lt;/a&gt;。&lt;/p&gt;

&lt;h1 id=&#34;功能&#34;&gt;功能&lt;/h1&gt;

&lt;p&gt;其实只有一个功能：为你的服务器生成&lt;code&gt;pem&lt;/code&gt;文件。&lt;/p&gt;

&lt;p&gt;查看这张Gif：&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://lynchwong.com/img/FastlanePem/PEMRecording.gif&#34; alt=&#34;alt text&#34; /&gt;&lt;/p&gt;

&lt;h1 id=&#34;安装&#34;&gt;安装&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;sudo gem install pem
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;确保你已经安装了 Xcode 最新版本的命令行工具：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;xcode-select --install
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;使用&#34;&gt;使用&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;pem
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;是的，这就是所有的命令！&lt;/p&gt;

&lt;p&gt;会做如下事情：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;创建新的签名请求(signing request)&lt;/li&gt;
&lt;li&gt;创建新的推送证书(certification)&lt;/li&gt;
&lt;li&gt;下载证书(certificate)&lt;/li&gt;
&lt;li&gt;在当前工作目录创建新的 &lt;code&gt;.pem&lt;/code&gt; 文件，你可以上传到你的服务器&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;pem&lt;/code&gt; 永远不会废除(revoke)你已经存在的证书(certificates)。&lt;/p&gt;

&lt;p&gt;如果你已经有一个可用的推送证书(certificate)，至少还有30以上的激活时间，&lt;code&gt;pem&lt;/code&gt;就不会创建新的证书(certificate)。如果你想要创建新的，使用&lt;code&gt;force&lt;/code&gt;：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;pem --force
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;你可以像下面这样传递参数：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;pem -a com.krausefx.app -u username
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果你想要生成开发的证书(development certificate)：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;pem --development
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;为 &lt;code&gt;p12&lt;/code&gt; 文件设置密码：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;pem -p &amp;quot;MyPass&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;可以为输出文件指定一个名字：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;pem -o my.pem
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;获取可用的选项，运行：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;pem --help
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;注意空的-p12-密码和-keychain-access-app&#34;&gt;注意空的&lt;code&gt;p12&lt;/code&gt;密码和 Keychain Access.app&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;pem&lt;/code&gt;会产生一个有效的没有指定密码的 &lt;code&gt;p12&lt;/code&gt; ，或者使用空的字符串当做密码。一旦这个文件有效，如果不指定密码，Mac OS X的Keychain Access不会允许你打开这个文件。&lt;/p&gt;

&lt;p&gt;相反，你可以使用 OpenSSL 来验证这个文件是有效的：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;openssl pkcs12 -info -in my.p12
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;环境变量&#34;&gt;环境变量&lt;/h2&gt;

&lt;p&gt;运行 &lt;code&gt;pem --help&lt;/code&gt; 获取可用的环境变量的列表。&lt;/p&gt;

&lt;h1 id=&#34;如何工作&#34;&gt;如何工作？&lt;/h1&gt;

&lt;p&gt;&lt;code&gt;pem&lt;/code&gt;使用&lt;a href=&#34;https://spaceship.airforce&#34;&gt; spaceship &lt;/a&gt;来和 Apple Developer Portal 交流，为你请求新的推送证书。&lt;/p&gt;

&lt;h2 id=&#34;如何存储我的密码&#34;&gt;如何存储我的密码？&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;pem&lt;/code&gt; 使用来自 &lt;code&gt;fastlane&lt;/code&gt; 的 &lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/credentials_manager&#34;&gt;password manager&lt;/a&gt;。查看 &lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/credentials_manager&#34;&gt;CredentialsManager README&lt;/a&gt;获取更多信息。&lt;/p&gt;

&lt;h1 id=&#34;提示&#34;&gt;提示&lt;/h1&gt;

&lt;h2 id=&#34;fastlane-工具链&#34;&gt;&lt;code&gt;fastlane&lt;/code&gt;工具链&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://fastlane.tools&#34;&gt; &lt;code&gt;fastlane&lt;/code&gt; &lt;/a&gt;：自动化构建和发布你 iOS 和 Android 应用程序的最简单方法&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/deliver&#34;&gt; &lt;code&gt;deliver&lt;/code&gt; &lt;/a&gt;：将你的应用、截图、元数据上传到App Store&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/snapshot&#34;&gt; &lt;code&gt;snapshot&lt;/code&gt; &lt;/a&gt;：将你iOS应用在每一种设备上进行本地化自动截图&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/frameit&#34;&gt; &lt;code&gt;frameit&lt;/code&gt; &lt;/a&gt;：快速将你的截图放入到适合的设备框中&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/sigh&#34;&gt; &lt;code&gt;sigh&lt;/code&gt; &lt;/a&gt;：管理你的 provisioning profiles&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/produce&#34;&gt; &lt;code&gt;produce&lt;/code&gt; &lt;/a&gt;：使用命令行工具在 iTunes Connect 和 Dev Portal 上创建新的iOS应用&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/cert&#34;&gt; &lt;code&gt;cert&lt;/code&gt; &lt;/a&gt;：自动创建和维护iOS的 code signing certificates&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/spaceship&#34;&gt; &lt;code&gt;spaceship&lt;/code&gt; &lt;/a&gt;：一个 Ruby library，自动连接 Apple Dev Center 和 iTunes Connect&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/pilot&#34;&gt; &lt;code&gt;pilot&lt;/code&gt; &lt;/a&gt;：管理你TestFlight测试人员的最好方式，使用终端构建&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/boarding&#34;&gt; &lt;code&gt;boarding&lt;/code&gt; &lt;/a&gt;：邀请你 TestFlight 的beta测试人员的最简单方式&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/gym&#34;&gt; &lt;code&gt;gym&lt;/code&gt; &lt;/a&gt;：构建你iOS应用程序&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/scan&#34;&gt; &lt;code&gt;scan&lt;/code&gt; &lt;/a&gt;：为你iOS和Mac应用运行测试的最简单方法&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/match&#34;&gt; &lt;code&gt;match&lt;/code&gt; &lt;/a&gt;：使用Git在你的团队中同步你的 certificates 和 profiles&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/supply&#34;&gt; &lt;code&gt;supply&lt;/code&gt; &lt;/a&gt;：将你的Android应用和数据上传到 Google Play&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/screengrab&#34;&gt; &lt;code&gt;screengrab&lt;/code&gt; &lt;/a&gt;：Android版&lt;code&gt;snapshot&lt;/code&gt;，一样的功能&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;使用-provisioning-quicklook-plugin&#34;&gt;使用&amp;rsquo;Provisioning Quicklook plugin&amp;rsquo;&lt;/h2&gt;

&lt;p&gt;下载然后安装 &lt;a href=&#34;https://github.com/chockenberry/Provisioning&#34;&gt;Provisioning Plugin&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;它会像下图这样向你展示 &lt;code&gt;pem&lt;/code&gt; 文件：&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://lynchwong.com/img/FastlanePem/QuickLookScreenshot.png&#34; alt=&#34;alt text&#34; /&gt;&lt;/p&gt;

&lt;h1 id=&#34;帮助&#34;&gt;帮助&lt;/h1&gt;

&lt;p&gt;请提交 issue 到 GitHub，并提供你关于设置的信息。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Fastlane - Frameit</title>
      <link>http://lynchwong.com/2016/06/fastlane---frameit/</link>
      <pubDate>Sun, 26 Jun 2016 11:21:05 +0000</pubDate>
      
      <guid>http://lynchwong.com/2016/06/fastlane---frameit/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;说明：翻译的 &lt;code&gt;Frameit&lt;/code&gt; 的指南，&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/frameit&#34;&gt; 原文地址 &lt;/a&gt;。
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&#34;http://lynchwong.com/img/FastlaneFrameit/frameit.png&#34; alt=&#34;alt text&#34; /&gt;&lt;/p&gt;

&lt;h1 id=&#34;frameit&#34;&gt;frameit&lt;/h1&gt;

&lt;p&gt;快速将你的截图放入合适的设备边框中。&lt;/p&gt;

&lt;p&gt;运行一条简单的命令&lt;code&gt;frameit&lt;/code&gt;就能允许你将iOS截图使用华丽的设备框起来。&lt;/p&gt;

&lt;p&gt;使用&lt;code&gt;frameit&lt;/code&gt;为你的 App Store、网站、QA 或者 邮件准备完美的截图。&lt;/p&gt;

&lt;h1 id=&#34;功能&#34;&gt;功能&lt;/h1&gt;

&lt;p&gt;运行一条简单的命令&lt;code&gt;frameit&lt;/code&gt;就能将你的iOS截图放入到华丽的设备框中。支持：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;iPhone 6 Plus, iPhone 6, iPhone 5s 和 iPad mini&lt;/li&gt;
&lt;li&gt;横屏和竖屏&lt;/li&gt;
&lt;li&gt;黑色和白色设备&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;这里有一个漂亮的Gif，展示了&lt;code&gt;frameit&lt;/code&gt;的执行：&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://lynchwong.com/img/FastlaneFrameit/FrameitGit.gif&#34; alt=&#34;alt text&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;结果&#34;&gt;结果&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;http://lynchwong.com/img/FastlaneFrameit/ScreenshotsBig.png&#34; alt=&#34;alt text&#34; /&gt;
&lt;img src=&#34;http://lynchwong.com/img/FastlaneFrameit/ScreenshotsOverview.png&#34; alt=&#34;alt text&#34; /&gt;
&lt;img src=&#34;http://lynchwong.com/img/FastlaneFrameit/MacExample.png&#34; alt=&#34;alt text&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;frameit&lt;/code&gt;2.0的更新算是&lt;a href=&#34;https://mindnode.com&#34;&gt; MindNode &lt;/a&gt;的赞助，参见上面的截图。&lt;/p&gt;

&lt;h1 id=&#34;安装&#34;&gt;安装&lt;/h1&gt;

&lt;p&gt;确保你已经安装了命令行工具&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;xcode-select --install
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;安装 gem&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo gem install frameit
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;由于法律原因，我不能预先将设备边框打包到&lt;code&gt;frameit&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;添加边框的过程非常简单，只需要运行&lt;code&gt;frameit&lt;/code&gt;，之后将会引导帮助你设置。在每台电脑上你只需要做一次。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;运行&lt;code&gt;frameit&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;点击&lt;code&gt;Enter.&lt;/code&gt;&lt;a href=&#34;https://developer.apple.com/app-store/marketing/guidelines/#images&#34;&gt; Apple page &lt;/a&gt;应该在你的浏览器中打开了，然后下载设备边框的图片&lt;/li&gt;
&lt;li&gt;下载你想要使用的设备边框&lt;/li&gt;
&lt;li&gt;点击&lt;code&gt;Enter&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;解压并将解压后的文件移动到&lt;code&gt;~/.frameit/devices_frames&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;点击&lt;code&gt;Enter&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;使用&#34;&gt;使用&lt;/h1&gt;

&lt;p&gt;只是给截图添加一个边框，干嘛还要使用Photoshop呢？&lt;/p&gt;

&lt;p&gt;只需导航到你存放截图的文件夹，然后运行如下命令：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;frameit
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;要使用银色版本的边框：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;frameit silver
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;添加新的边框再次运行设置的过程：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;frameit setup
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;当你使用&lt;code&gt;frameit&lt;/code&gt;的时候没有标题，这个截图将会使用&lt;code&gt;full&lt;/code&gt;的解决方法，这意味着这个截图不能直接上传到 App Store 。应该使用在网站、多媒体打印、邮件里面。查看下面的章节制作 App Store 的截图。&lt;/p&gt;

&lt;h2 id=&#34;标题和背景-可选&#34;&gt;标题和背景(可选)&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;frameit&lt;/code&gt;2.0 现在可以添加自定义的背景、标题、还有文字颜色到截图上。&lt;/p&gt;

&lt;p&gt;可以在&lt;a href=&#34;https://github.com/fastlane/examples/tree/master/MindNode/screenshots&#34;&gt; fastlane examples &lt;/a&gt;项目中找到可用的例子。&lt;/p&gt;

&lt;h3 id=&#34;framefile-json&#34;&gt;Framefile.json&lt;/h3&gt;

&lt;p&gt;使用这个文件来定义通用的信息：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{
    &amp;quot;default&amp;quot;: {
        &amp;quot;keyword&amp;quot;: {
            &amp;quot;font&amp;quot;: &amp;quot;./fonts/MyFont-Rg.otf&amp;quot;
        },
        &amp;quot;title&amp;quot;: {
            &amp;quot;font&amp;quot;: &amp;quot;./fonts/MyFont-Th.otf&amp;quot;,
            &amp;quot;color&amp;quot;: &amp;quot;#545454&amp;quot;
        },
        &amp;quot;background&amp;quot;: &amp;quot;./background.jpg&amp;quot;,
        &amp;quot;padding&amp;quot;: 50,
        &amp;quot;show_complete_frame&amp;quot;: false
    },

    &amp;quot;data&amp;quot;: [
        {
            &amp;quot;filter&amp;quot;: &amp;quot;Brainstorming&amp;quot;,
            &amp;quot;keyword&amp;quot;: {
                &amp;quot;color&amp;quot;: &amp;quot;#d21559&amp;quot;
            }
        },
        {
            &amp;quot;filter&amp;quot;: &amp;quot;Organizing&amp;quot;,
            &amp;quot;keyword&amp;quot;: {
                &amp;quot;color&amp;quot;: &amp;quot;#feb909&amp;quot;
            }
        },
        {
            &amp;quot;filter&amp;quot;: &amp;quot;Sharing&amp;quot;,
            &amp;quot;keyword&amp;quot;: {
                &amp;quot;color&amp;quot;: &amp;quot;#aa4dbc&amp;quot;
            }
        },
        {
            &amp;quot;filter&amp;quot;: &amp;quot;Styling&amp;quot;,
            &amp;quot;keyword&amp;quot;: {
                &amp;quot;color&amp;quot;: &amp;quot;#31bb48&amp;quot;
            }
        }
    ]
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;show_complete_frame&lt;/code&gt;的值指定&lt;code&gt;frameit&lt;/code&gt;是否应该收缩设备和边框，让它们能够完整的显示在边框的截图中。如果值是 false，那么就会超过截图的底部。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;filter&lt;/code&gt;的值是截图名字的一部分，用来决定给定的选项用在哪些截图上。如果一个截图的名字叫做&lt;code&gt;iPhone5_Brainstorming.png&lt;/code&gt;那么第一个输入的&lt;code&gt;data&lt;/code&gt;数组会被使用。&lt;/p&gt;

&lt;p&gt;你可以找到更复杂的&lt;a href=&#34;https://github.com/fastlane/examples/blob/master/MindNode/screenshots/Framefile.json&#34;&gt; 配置 &lt;/a&gt;，也支持中文、日文、韩文。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Framefile.json&lt;/code&gt;应该放在&lt;code&gt;screenshots&lt;/code&gt;文件夹中，如&lt;a href=&#34;https://github.com/fastlane/examples/tree/master/MindNode/screenshots&#34;&gt; example &lt;/a&gt;看到的那样。&lt;/p&gt;

&lt;h3 id=&#34;strings-文件&#34;&gt;&lt;code&gt;.strings&lt;/code&gt;文件&lt;/h3&gt;

&lt;p&gt;为了定义标题和可选的关键字，放入两个&lt;code&gt;.strings&lt;/code&gt;文件到language文件夹(e.g.&lt;a href=&#34;https://github.com/fastlane/examples/tree/master/MindNode/screenshots/en-US&#34;&gt; en-US in the example project &lt;/a&gt;)。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;keyword.strings&lt;/code&gt; 和 &lt;code&gt;title.strings&lt;/code&gt;是已经为你的iOS应用使用的&lt;code&gt;.strings&lt;/code&gt;文件，使其易于使用您现有的翻译服务来获得本地化的标题。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;注意：&lt;/strong&gt;这些&lt;code&gt;.strings&lt;/code&gt;文件必需utf-16编码(UTF-16 LE with BOM)。也必须以空行开始。如果有问题，参见&lt;a href=&#34;https://github.com/fastlane/fastlane/issues/1740&#34;&gt; issue #1740 &lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;注意：&lt;/strong&gt;如果你想要标题，你必需提供背景。如果没有指定背景，&lt;code&gt;frameit&lt;/code&gt;不会添加标题。&lt;/p&gt;

&lt;h3 id=&#34;上传截图到itc&#34;&gt;上传截图到iTC&lt;/h3&gt;

&lt;p&gt;使用&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/deliver&#34;&gt; deliver &lt;/a&gt;自动上传所有截图到 iTunes Connect 。&lt;/p&gt;

&lt;h2 id=&#34;mac&#34;&gt;Mac&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;frameit&lt;/code&gt;2.0 也可以 Mac OS X 应用框起来，你必需提供如下信息：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;offset&lt;/code&gt;信息，&lt;code&gt;frameit&lt;/code&gt;才知道把你的截图放到哪&lt;/li&gt;
&lt;li&gt;&lt;code&gt;background&lt;/code&gt;的路径，包含背景和 Mac&lt;/li&gt;
&lt;li&gt;&lt;code&gt;titleHeight&lt;/code&gt;：标题的高度，以像素为单位&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;例子&#34;&gt;例子&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;{
    &amp;quot;default&amp;quot;: {
        &amp;quot;title&amp;quot;: {
            &amp;quot;color&amp;quot;: &amp;quot;#545454&amp;quot;
        },
        &amp;quot;background&amp;quot;: &amp;quot;Mac.jpg&amp;quot;,
        &amp;quot;offset&amp;quot;: {
            &amp;quot;offset&amp;quot;: &amp;quot;+676+479&amp;quot;,
            &amp;quot;titleHeight&amp;quot;: 320
        }
    },
    &amp;quot;data&amp;quot;: [
        {
            &amp;quot;filter&amp;quot;: &amp;quot;Brainstorming&amp;quot;,
            &amp;quot;keyword&amp;quot;: {
                &amp;quot;color&amp;quot;: &amp;quot;#d21559&amp;quot;
            }
        }
    ]
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;查看&lt;a href=&#34;https://github.com/fastlane/examples/tree/master/MindNode/screenshots&#34;&gt; MindNode example project &lt;/a&gt;。&lt;/p&gt;

&lt;h1 id=&#34;提示&#34;&gt;提示&lt;/h1&gt;

&lt;h2 id=&#34;fastlane-工具链&#34;&gt;&lt;code&gt;fastlane&lt;/code&gt;工具链&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://fastlane.tools&#34;&gt; &lt;code&gt;fastlane&lt;/code&gt; &lt;/a&gt;：自动化构建和发布你 iOS 和 Android 应用程序的最简单方法&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/deliver&#34;&gt; &lt;code&gt;deliver&lt;/code&gt; &lt;/a&gt;：将你的应用、截图、元数据上传到App Store&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/snapshot&#34;&gt; &lt;code&gt;snapshot&lt;/code&gt; &lt;/a&gt;：将你iOS应用在每一种设备上进行本地化自动截图&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/pem&#34;&gt; &lt;code&gt;pem&lt;/code&gt; &lt;/a&gt;：自动生成和更新你的推送通知证书&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/sigh&#34;&gt; &lt;code&gt;sigh&lt;/code&gt; &lt;/a&gt;：管理你的 provisioning profiles&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/produce&#34;&gt; &lt;code&gt;produce&lt;/code&gt; &lt;/a&gt;：使用命令行工具在 iTunes Connect 和 Dev Portal 上创建新的iOS应用&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/cert&#34;&gt; &lt;code&gt;cert&lt;/code&gt; &lt;/a&gt;：自动创建和维护iOS的 code signing certificates&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/spaceship&#34;&gt; &lt;code&gt;spaceship&lt;/code&gt; &lt;/a&gt;：一个 Ruby library，自动连接 Apple Dev Center 和 iTunes Connect&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/pilot&#34;&gt; &lt;code&gt;pilot&lt;/code&gt; &lt;/a&gt;：管理你TestFlight测试人员的最好方式，使用终端构建&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/boarding&#34;&gt; &lt;code&gt;boarding&lt;/code&gt; &lt;/a&gt;：邀请你 TestFlight 的beta测试人员的最简单方式&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/gym&#34;&gt; &lt;code&gt;gym&lt;/code&gt; &lt;/a&gt;：构建你iOS应用程序&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/scan&#34;&gt; &lt;code&gt;scan&lt;/code&gt; &lt;/a&gt;：为你iOS和Mac应用运行测试的最简单方法&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/match&#34;&gt; &lt;code&gt;match&lt;/code&gt; &lt;/a&gt;：使用Git在你的团队中同步你的 certificates 和 profiles&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/supply&#34;&gt; &lt;code&gt;supply&lt;/code&gt; &lt;/a&gt;：将你的Android应用和数据上传到 Google Play&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/screengrab&#34;&gt; &lt;code&gt;screengrab&lt;/code&gt; &lt;/a&gt;：Android版&lt;code&gt;snapshot&lt;/code&gt;，一样的功能&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;生成本地化截图&#34;&gt;生成本地化截图&lt;/h2&gt;

&lt;p&gt;查看&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/snapshot&#34;&gt; snapshot &lt;/a&gt;。&lt;/p&gt;

&lt;h2 id=&#34;存储device-frames的可选地址&#34;&gt;存储device_frames的可选地址&lt;/h2&gt;

&lt;p&gt;如果你不想将 Device frames 存储在&lt;code&gt;~/.frameit/device_frames&lt;/code&gt;目录，你可以存储在&lt;code&gt;./fastlane/screenshots/devices_frames&lt;/code&gt;。但是你如果这样做的话要注意苹果的图片是有版权的，不应该当做你的 Repository 重写发布出去。所以你应该想要在 .gitignore 文件中包含它们。&lt;/p&gt;

&lt;h2 id=&#34;边框白色背景&#34;&gt;边框白色背景&lt;/h2&gt;

&lt;p&gt;苹果提供的一些老旧的图片还有白色背景，而不是透明的。你必需编辑这些图片的 Photoshop 文件去掉白色的背景，删除生成的&lt;code&gt;.png&lt;/code&gt;文件，再次运行&lt;code&gt;frameit&lt;/code&gt;。&lt;/p&gt;

&lt;h2 id=&#34;使用干净的状态栏&#34;&gt;使用干净的状态栏&lt;/h2&gt;

&lt;p&gt;你可以使用&lt;a href=&#34;https://github.com/shinydevelopment/SimulatorStatusMagic&#34;&gt; SimulatorStatusMagic &lt;/a&gt;来清理状态栏。&lt;/p&gt;

&lt;h2 id=&#34;文本周围的灰色东西&#34;&gt;文本周围的灰色东西&lt;/h2&gt;

&lt;p&gt;如果您遇到任何质量问题，就像字体周围有边框，通常重装 &lt;code&gt;imagemagick&lt;/code&gt; 会有帮助。你可以运行如下命令来重新安装：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;brew uninstall imagemagick
brew install imagemagick
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;卸载&#34;&gt;卸载&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sudo gem uninstall frameit&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rm -rf ~/.frameit&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;帮助&#34;&gt;帮助&lt;/h1&gt;

&lt;p&gt;请提交 issue 到 GitHub，并提供你关于设置的信息。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Fastlane - Snapshot</title>
      <link>http://lynchwong.com/2016/06/fastlane---snapshot/</link>
      <pubDate>Sun, 19 Jun 2016 13:52:28 +0000</pubDate>
      
      <guid>http://lynchwong.com/2016/06/fastlane---snapshot/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;说明：翻译的 &lt;code&gt;Snapshot&lt;/code&gt; 的指南，&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/snapshot&#34;&gt; 原文地址 &lt;/a&gt;。
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&#34;http://lynchwong.com/img/FastlaneSnapshot/snapshot.png&#34; alt=&#34;alt text&#34; /&gt;&lt;/p&gt;

&lt;h1 id=&#34;snapshot&#34;&gt;snapshot&lt;/h1&gt;

&lt;p&gt;对你的 iOS 应用程序在每一种设备上自动截取本地化截图。&lt;/p&gt;

&lt;p&gt;你必需手动创建 20 (语言) x 6 (设备) x 5 (截图) = 600 张截图。&lt;/p&gt;

&lt;p&gt;很难保证所有的事情都是正确的！&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;所有更新的截图&lt;/li&gt;
&lt;li&gt;没有加载提示&lt;/li&gt;
&lt;li&gt;屏幕中相同的内容&lt;/li&gt;
&lt;li&gt;干净的状态栏&lt;/li&gt;
&lt;li&gt;上传截图 (&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/deliver&#34;&gt; &lt;code&gt;deliver&lt;/code&gt; &lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;更多关于&lt;a href=&#34;https://krausefx.com/blog/creating-perfect-app-store-screenshots-of-your-ios-app&#34;&gt; 创建完美截图的信息 &lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;snapshot&lt;/code&gt;完全运行在后台，当电脑在为你截图时，你可以做其它的事情。&lt;/p&gt;

&lt;h1 id=&#34;注意-新的-snapshot-使用ui-tests-in-xcode-7&#34;&gt;注意：新的&lt;code&gt;snapshot&lt;/code&gt;使用UI Tests in Xcode 7&lt;/h1&gt;

&lt;p&gt;苹果发布的新的 Xcode 版本内建支持了 UI Tests。这项技术使得&lt;code&gt;snapshot&lt;/code&gt;比之前更好：不必再处理 UI Automation Javascript 代码，现在你可以使用 Swift 或者 Objective C 来编写截图的代码，并且允许你断点调试。&lt;/p&gt;

&lt;p&gt;所以，&lt;code&gt;snapshot&lt;/code&gt;从底层重写了代码，但是没有改变公共 API。&lt;/p&gt;

&lt;p&gt;详见&lt;a href=&#34;https://github.com/fastlane/fastlane/blob/master/snapshot/MigrationGuide.md&#34;&gt; MigrationGuide to 1.0 &lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;为什么改为 UI Tests ？&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;UI Automation 过时了&lt;/li&gt;
&lt;li&gt;UI Tests 在未来将会进化支持更多功能&lt;/li&gt;
&lt;li&gt;UI Tests 更容易调试&lt;/li&gt;
&lt;li&gt;UI Tests 使用 Swift 或者 Objective C 编写&lt;/li&gt;
&lt;li&gt;UI Tests 可以使用更干净更好的方式执行&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;功能&#34;&gt;功能&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;根据所有的模拟器，不同的语言，创建几百张截图&lt;/li&gt;
&lt;li&gt;只需配置一次，存储在 Git 中&lt;/li&gt;
&lt;li&gt;当电脑在为你截图的时候，你可以做其它的事情&lt;/li&gt;
&lt;li&gt;集成&lt;a href=&#34;https://fastlane.tools&#34;&gt; fastlane &lt;/a&gt; 和 &lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/deliver&#34;&gt; deliver &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;生成漂亮的 Web 页面，展示所有设备的截图。最棒的是你可以发送给 Q&amp;amp;A 或者市场的团队&lt;/li&gt;
&lt;li&gt;&lt;code&gt;snapshot&lt;/code&gt;在截图前会自动等待所有的网络请求结束(我们不想在App Store里有网络加载的截图)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;在&lt;code&gt;snapshot&lt;/code&gt;成功创建新的截图后，会生成一个漂亮的HTML文件来展示所有的截图，让你能够快速浏览所有截图：&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://lynchwong.com/img/FastlaneSnapshot/htmlPagePreviewFade.jpg&#34; alt=&#34;alt text&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;为什使用&#34;&gt;为什使用？&lt;/h2&gt;

&lt;p&gt;该工具会自动切换语言，设备类型和运行每一个组合的UI测试。&lt;/p&gt;

&lt;h2 id=&#34;为什么要自动化这个过程&#34;&gt;为什么要自动化这个过程？&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;要花费很多时间来截图&lt;/li&gt;
&lt;li&gt;能够浏览你所有的截图，运行所有可用的模拟器，不需要手动启动上百次&lt;/li&gt;
&lt;li&gt;翻译人员非常容易验证的翻译，这些翻译在应用上下文中是有意义的&lt;/li&gt;
&lt;li&gt;很容易验证本地化的标签是否在所有设备上合适&lt;/li&gt;
&lt;li&gt;可以集成测试：你可以在脚本中测试UI元素&lt;/li&gt;
&lt;li&gt;为每一次应用更新提供新的截图，你客户应得的&lt;/li&gt;
&lt;li&gt;如果截图有个小错误？只需要修正然后从新运行脚本&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;安装&#34;&gt;安装&lt;/h1&gt;

&lt;p&gt;安装 gem&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo gem install snapshot
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;确保你已经安装了 Xcode 最新版本的命令行工具：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;xcode-select --install
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;ui-tests&#34;&gt;UI Tests&lt;/h1&gt;

&lt;h2 id=&#34;开始&#34;&gt;开始&lt;/h2&gt;

&lt;p&gt;这个项目使用苹果新发布的 UIUI Tests。这里不会讲解如何编写脚本的细节。&lt;/p&gt;

&lt;p&gt;可以从如下几个链接开始；&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://developer.apple.com/videos/play/wwdc2015/406/&#34;&gt;WWDC 2015 Introduction to UI Tests&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.mokacoding.com/blog/xcode-7-ui-testing/&#34;&gt;A first look into UI Tests&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://masilotti.com/ui-testing-xcode-7/&#34;&gt;UI Testing in Xcode 7&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/ConfusedVorlon/HSTestingBackchannel&#34;&gt;HSTestingBackchannel : ‘Cheat’ by communicating directly with your app&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://tisunov.github.io/2015/11/06/automating-app-store-screenshots-generation-with-fastlane-snapshot-and-sketch.html&#34;&gt;Automating App Store screenshots using fastlane snapshot and frameit&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;注意：由于没有从 UI Tests 触发截图的官方方法，&lt;code&gt;snapshot&lt;/code&gt;使用了一种解决方法(在&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/snapshot#how-does-it-work&#34;&gt; How Does It Work? &lt;/a&gt;中描述)来触发截图。如果你觉得应该是这样的权利，请复制雷达&lt;a href=&#34;https://openradar.appspot.com/radar?id=5056366381105152&#34;&gt; 23062925 &lt;/a&gt;。(不知道后面一句话是什么鬼意思)&lt;/p&gt;

&lt;h1 id=&#34;快速开始&#34;&gt;快速开始&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;在你的项目中创建一个新的 UI Test target(&lt;a href=&#34;https://krausefx.com/blog/run-xcode-7-ui-tests-from-the-command-line&#34;&gt; top part of this article &lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;在你的项目文件夹中运行&lt;code&gt;snapshot init&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;添加 ./SnapshotHelper.swift 到你的 UI Test target (你可以移动文件到任何你想的地方)&lt;/li&gt;
&lt;li&gt;(Objective C only) 添加桥接头文件到你的测试类：

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;#import &amp;quot;MYUITests-Swift.h&amp;quot;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;桥接头文件使用你的 test target 名称加上 -Swift.h。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;在你UI测试类，点击屏幕左下角&lt;code&gt;Record&lt;/code&gt;按钮来记录你的交互&lt;/li&gt;
&lt;li&gt;需要截图时，在交互之间调用如下方法：

&lt;ul&gt;
&lt;li&gt;Swift:&lt;code&gt;snapshot(&amp;quot;01LoginScreen&amp;quot;)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Objective C:&lt;code&gt;[Snapshot snapshot:@&amp;quot;01LoginScreen&amp;quot; waitForLoadingIndicator:YES];&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;将如下代码添加到你的 &lt;code&gt;setUp()&lt;/code&gt; 方法中&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Swift&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;let app = XCUIApplication()
setupSnapshot(app)
app.launch()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Objective C&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;XCUIApplication *app = [[XCUIApplication alloc] init];
[Snapshot setupSnapshot:app];
[app launch];
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://lynchwong.com/img/FastlaneSnapshot/snapshot.gif&#34; alt=&#34;alt text&#34; /&gt;&lt;/p&gt;

&lt;p&gt;你可以看下项目里面的例子，然后把玩一下。&lt;/p&gt;

&lt;h1 id=&#34;使用&#34;&gt;使用&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;snapshot
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;你的截图会默认存储在&lt;code&gt;./screenshots/&lt;/code&gt;文件夹。(如果你使用 fastlane 的话，存储在&lt;code&gt;./screenshots/&lt;/code&gt;文件夹)&lt;/p&gt;

&lt;p&gt;如果在一个设备上运行截图脚本的时候发生了错误，那么那个设备就没有任何截图，然后&lt;code&gt;snapshot&lt;/code&gt;会继续下一个设备或者下一种语言。在第一错误发生后停止流程，运行&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;snapshot --stop_after_first_error
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;默认情况下，&lt;code&gt;snapshot&lt;/code&gt;在完成所有工作后会打开 html 。这个步骤可以使用如下命令跳过：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;snapshot --stop_after_first_error --skip_open_summary
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;有许多可用的选项来定义如何构建你的应用，比如：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;snapshot --scheme &amp;quot;UITests&amp;quot; --configuration &amp;quot;Release&amp;quot;  --sdk &amp;quot;iphonesimulator&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;在运行&lt;code&gt;snapshot&lt;/code&gt;前重新安装应用&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;snapshot --reinstall_app --app_identifier &amp;quot;tools.fastlane.app&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;默认情况下，如果 UI Tests 失败了，&lt;code&gt;snapshot&lt;/code&gt;会自动尝试运行。这是因为 UI Tests 随机失败(e.g.&lt;a href=&#34;https://github.com/fastlane-old/snapshot/issues/372&#34;&gt;#372&lt;/a&gt;)。你可以使用如下命令来改写这个数字&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;snapshot --number_of_retries 3
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;在运行&lt;code&gt;snapshot&lt;/code&gt;之前添加照片和(或者)视频到模拟器&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;snapshot --add_photos MyTestApp/Assets/demo.jpg --add_videos MyTestApp/Assets/demo.mp4
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;列出所有可用的选项：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;snapshot --help
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;在运行完&lt;code&gt;snapshot&lt;/code&gt;，你会得到一个非常漂亮的概要：&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://lynchwong.com/img/FastlaneSnapshot/testSummary.png&#34; alt=&#34;alt text&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;snapfile&#34;&gt;Snapfile&lt;/h2&gt;

&lt;p&gt;所有可用的选项可以存储在一个叫做&lt;code&gt;Snapfile&lt;/code&gt;的配置文件里面。由于你项目的大部分的值都不会改变，所以推荐存储在这个文件里：&lt;/p&gt;

&lt;p&gt;首先确定有&lt;code&gt;Snapfile&lt;/code&gt;文件(你可以运行&lt;code&gt;snapshot init&lt;/code&gt;得到这个文件)&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Snapfile&lt;/code&gt;文件可以包含所有&lt;code&gt;snapshot --help&lt;/code&gt;的可用选项：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;scheme &amp;quot;UITests&amp;quot;

devices([
    &amp;quot;iPhone 6&amp;quot;,
    &amp;quot;iPhone 6 Plus&amp;quot;,
    &amp;quot;iPhone 5&amp;quot;,
    &amp;quot;iPhone 4s&amp;quot;
])

languages([
    &amp;quot;en-US&amp;quot;,
    &amp;quot;de-DE&amp;quot;,
    &amp;quot;es-ES&amp;quot;,
    [&amp;quot;pt&amp;quot;, &amp;quot;pt_BR&amp;quot;] # Portuguese with Brazilian locale
])

launch_arguments([&amp;quot;-username Felix&amp;quot;])

# The directory in which the screenshots should be stored
output_directory &#39;./screenshots&#39;

clear_previous_screenshots true

add_photos [&amp;quot;MyTestApp/Assets/demo.jpg&amp;quot;]
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;完全重置所有模拟器&#34;&gt;完全重置所有模拟器&lt;/h2&gt;

&lt;p&gt;你可以在终端中使用下面的命令来删除和重新创建所有iOS模拟器：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;snapshot reset_simulators
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;警告：&lt;/strong&gt;这会删除你所有的模拟器然后使用新的替换！当你运行&lt;code&gt;snapshot&lt;/code&gt;遇到非常奇怪的问题时，这非常有用。&lt;/p&gt;

&lt;p&gt;你可以使用环境变量&lt;code&gt;SNAPSHOT_FORCE_DELETE&lt;/code&gt;来取消删除前要求确认的信息。&lt;/p&gt;

&lt;h2 id=&#34;更新-snapshot-的-helpers&#34;&gt;更新 snapshot 的 helpers&lt;/h2&gt;

&lt;p&gt;一些更新要求 helper 的文件更新。&lt;code&gt;snapshot&lt;/code&gt;会自动警告你，然后告诉你怎么升级。&lt;/p&gt;

&lt;p&gt;基本的你可以运行&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;snapshot update
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;为了更新&lt;code&gt;SnapshotHelper.swift&lt;/code&gt;文件。如果你修改了你的&lt;code&gt;SnapshotHelper.swift&lt;/code&gt;文件，然后想要手动更新文件，查看&lt;a href=&#34;https://github.com/fastlane/fastlane/blob/master/snapshot/lib/assets/SnapshotHelper.swift&#34;&gt; SnapshotHelper.swift &lt;/a&gt;。&lt;/p&gt;

&lt;h2 id=&#34;启动参数&#34;&gt;启动参数&lt;/h2&gt;

&lt;p&gt;你可以在你应用启动的时候提供额外的参数。这些字符串通过&lt;code&gt;NSProcessInfo.processInfo().arguments&lt;/code&gt;在你的应用中(eg.不是在 testing target 中)将会可用。另外使用 user-default 语法(&lt;code&gt;-key value&lt;/code&gt;)，它们将会在&lt;code&gt;NSUserDefaults.standardUserDefaults()&lt;/code&gt;中当作键值对可用。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;launch_arguments([
    &amp;quot;-firstName Felix -lastName Krause&amp;quot;
])

name.text = NSUserDefaults.standardUserDefaults().stringForKey(&amp;quot;firstName&amp;quot;)
// name.text = &amp;quot;Felix&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;snapshot&lt;/code&gt;包含&lt;code&gt;-FASTLANE_SNAPSHOT YES&lt;/code&gt;，会为 user default 设置一个临时的健&lt;code&gt;FASTLANE_SNAPSHOT&lt;/code&gt;，你可以使用这个来检测&lt;code&gt;snapshot&lt;/code&gt;何时运行你的应用。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;if NSUserDefaults.standardUserDefaults().boolForKey(&amp;quot;FASTLANE_SNAPSHOT&amp;quot;) {
    // runtime check that we are in snapshot mode
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;指定多个字符串参数，&lt;code&gt;snapshot&lt;/code&gt;会为每种参数、设备、语言的组合截图。当你需要比较相同截图不同功能标识、动态文本大小、不懂数据集时非常有用。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# Snapfile for A/B Test Comparison
launch_arguments([
    &amp;quot;-secretFeatureEnabled YES&amp;quot;,
    &amp;quot;-secretFeatureEnabled NO&amp;quot;
])
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;如何工作的&#34;&gt;如何工作的？&lt;/h2&gt;

&lt;p&gt;最简单的解决方法就是在文件里面呈现 UIWindow。但那是不可能的，因为 UI Tests 并不运行在主线程上。所以&lt;code&gt;snapshot&lt;/code&gt;使用了不同的方法：&lt;/p&gt;

&lt;p&gt;当你在 Xcode 中运行单元测试时，会生成一个 plist 文件，记录测试过程中(&lt;a href=&#34;http://michele.io/test-logs-in-xcode&#34;&gt; 详细信息 &lt;/a&gt;)发生的所有事件。Xcode 会在这些事件之前，之后以及运行时都会生成截图。没有办法手动触发截图事件。这些截图和plist文件存储在 DerivedData 目录，&lt;code&gt;snapshot&lt;/code&gt;存储在临时文件夹。&lt;/p&gt;

&lt;p&gt;当用户在 UI Tests(Swift 或者 Objective C)中调用&lt;code&gt;snapshot(...)&lt;/code&gt;时，脚本实际上只是执行了一次旋转到.Unknown，实际上对应用没有任何影响，但是足够来触发截图了。这对应用程序没有任何影响，在你的测试中也不会做任何事情。目标就是找出一些用户永远不会触发的事件，所以这样我们就能知道是来自&lt;code&gt;snapshot&lt;/code&gt;了。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;snapshot&lt;/code&gt;然后就会迭代所有的测试的事件，然后检查我们在哪里做了这个奇怪的旋转。一旦&lt;code&gt;snapshot&lt;/code&gt;找到了所有由&lt;code&gt;snapshot&lt;/code&gt;触发的事件，它会收集应用所有实际截图的文件名的有序序列。&lt;/p&gt;

&lt;p&gt;在测试的输出中，Swift的&lt;code&gt;snapshot&lt;/code&gt;函数会打印如下格式的输出：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;snapshot: [some random text here]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;snapshot&lt;/code&gt;使用正则表达式找到这些条目。在终端中&lt;code&gt;snapshot&lt;/code&gt;输出的数目和plist文件中&lt;code&gt;snapshot&lt;/code&gt;的事件数目应该是一样的。知道了这些，&lt;code&gt;snapshot&lt;/code&gt;会自动匹配这两个序列来分辨所有这些截图的名字。然后它们会被复制到输出目录然后根据语言和设备分开。&lt;/p&gt;

&lt;p&gt;两样东西必需从&lt;code&gt;snapshot&lt;/code&gt;传递给&lt;code&gt;xcodebuild&lt;/code&gt;命令行工具：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;设备类型通过&lt;code&gt;xcodebuild&lt;/code&gt;参数的&lt;code&gt;destination&lt;/code&gt;参数传递&lt;/li&gt;
&lt;li&gt;语言通过一个临时文件传递，这个文件在运行测试之前由&lt;code&gt;snapshot&lt;/code&gt;写入。然后在 UI Tests 启动应用前读入。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;如果你找到了更好的方法来做所有这里列出的工作，请提交一个 issue 到 GitHub 或者甚至是 pull request。&lt;/p&gt;

&lt;p&gt;同样，feel free to duplicate radar &lt;a href=&#34;https://openradar.appspot.com/radar?id=5056366381105152&#34;&gt;23062925&lt;/a&gt;。&lt;/p&gt;

&lt;h1 id=&#34;提示&#34;&gt;提示&lt;/h1&gt;

&lt;h2 id=&#34;fastlane-工具链&#34;&gt;&lt;code&gt;fastlane&lt;/code&gt;工具链&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://fastlane.tools&#34;&gt; &lt;code&gt;fastlane&lt;/code&gt; &lt;/a&gt;：自动化构建和发布你 iOS 和 Android 应用程序的最简单方法&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/deliver&#34;&gt; &lt;code&gt;deliver&lt;/code&gt; &lt;/a&gt;：将你的应用、截图、元数据上传到App Store&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/frameit&#34;&gt; &lt;code&gt;frameit&lt;/code&gt; &lt;/a&gt;：快速将你的截图放入到适合的设备框中&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/pem&#34;&gt; &lt;code&gt;pem&lt;/code&gt; &lt;/a&gt;：自动生成和更新你的推送通知证书&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/sigh&#34;&gt; &lt;code&gt;sigh&lt;/code&gt; &lt;/a&gt;：管理你的 provisioning profiles&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/produce&#34;&gt; &lt;code&gt;produce&lt;/code&gt; &lt;/a&gt;：使用命令行工具在 iTunes Connect 和 Dev Portal 上创建新的iOS应用&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/cert&#34;&gt; &lt;code&gt;cert&lt;/code&gt; &lt;/a&gt;：自动创建和维护iOS的 code signing certificates&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/spaceship&#34;&gt; &lt;code&gt;spaceship&lt;/code&gt; &lt;/a&gt;：一个 Ruby library，自动连接 Apple Dev Center 和 iTunes Connect&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/pilot&#34;&gt; &lt;code&gt;pilot&lt;/code&gt; &lt;/a&gt;：管理你TestFlight测试人员的最好方式，使用终端构建&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/boarding&#34;&gt; &lt;code&gt;boarding&lt;/code&gt; &lt;/a&gt;：邀请你 TestFlight 的beta测试人员的最简单方式&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/gym&#34;&gt; &lt;code&gt;gym&lt;/code&gt; &lt;/a&gt;：构建你iOS应用程序&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/scan&#34;&gt; &lt;code&gt;scan&lt;/code&gt; &lt;/a&gt;：为你iOS和Mac应用运行测试的最简单方法&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/match&#34;&gt; &lt;code&gt;match&lt;/code&gt; &lt;/a&gt;：使用Git在你的团队中同步你的 certificates 和 profiles&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/supply&#34;&gt; &lt;code&gt;supply&lt;/code&gt; &lt;/a&gt;：将你的Android应用和数据上传到 Google Play&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/screengrab&#34;&gt; &lt;code&gt;screengrab&lt;/code&gt; &lt;/a&gt;：Android版&lt;code&gt;snapshot&lt;/code&gt;，一样的功能&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;将截图框起来&#34;&gt;将截图框起来&lt;/h2&gt;

&lt;p&gt;如果你想给截图周围加一个边框，甚至是在顶部添加一个标题，查看&lt;a href=&#34;https://github.com/fastlane/fastlane/tree/master/frameit&#34;&gt; frameit &lt;/a&gt;。&lt;/p&gt;

&lt;h2 id=&#34;可用的语言代码&#34;&gt;可用的语言代码&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;ALL_LANGUAGES = [&amp;quot;da&amp;quot;, &amp;quot;de-DE&amp;quot;, &amp;quot;el&amp;quot;, &amp;quot;en-AU&amp;quot;, &amp;quot;en-CA&amp;quot;, &amp;quot;en-GB&amp;quot;, &amp;quot;en-US&amp;quot;, &amp;quot;es-ES&amp;quot;, &amp;quot;es-MX&amp;quot;, &amp;quot;fi&amp;quot;, &amp;quot;fr-CA&amp;quot;, &amp;quot;fr-FR&amp;quot;, &amp;quot;id&amp;quot;, &amp;quot;it&amp;quot;, &amp;quot;ja&amp;quot;, &amp;quot;ko&amp;quot;, &amp;quot;ms&amp;quot;, &amp;quot;nl&amp;quot;, &amp;quot;no&amp;quot;, &amp;quot;pt-BR&amp;quot;, &amp;quot;pt-PT&amp;quot;, &amp;quot;ru&amp;quot;, &amp;quot;sv&amp;quot;, &amp;quot;th&amp;quot;, &amp;quot;tr&amp;quot;, &amp;quot;vi&amp;quot;, &amp;quot;zh-Hans&amp;quot;, &amp;quot;zh-Hant&amp;quot;]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;获取更多关于语言和本地代码的信息，参阅&lt;a href=&#34;https://developer.apple.com/library/ios/documentation/MacOSX/Conceptual/BPInternational/LanguageandLocaleIDs/LanguageandLocaleIDs.html&#34;&gt; Internationalization and Localization Guide &lt;/a&gt;。&lt;/p&gt;

&lt;h2 id=&#34;使用干净的状态栏&#34;&gt;使用干净的状态栏&lt;/h2&gt;

&lt;p&gt;你可以使用&lt;a href=&#34;https://github.com/shinydevelopment/SimulatorStatusMagic&#34;&gt; SimulatorStatusMagic &lt;/a&gt;来清理状态栏。&lt;/p&gt;

&lt;h2 id=&#34;编辑-snapfile&#34;&gt;编辑&lt;code&gt;Snapfile&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;将语法高亮改为Ruby。&lt;/p&gt;

&lt;h2 id=&#34;模拟器没有启动应用&#34;&gt;模拟器没有启动应用&lt;/h2&gt;

&lt;p&gt;当应用程序启动后，App直接死掉。可能有两个问题：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;模拟器处于损坏的状态，你需要重新创建。你可以使用&lt;code&gt;snapshot reset_simulators&lt;/code&gt;来重置所有的模拟器(这将会删除所有安装的App)&lt;/li&gt;
&lt;li&gt;重启往往非常有用&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;检测语言&#34;&gt;检测语言&lt;/h2&gt;

&lt;p&gt;使用如下代码可以检测你当前测试使用的本地化：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;You can access the language using the `deviceLanguage` variable.
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;帮助&#34;&gt;帮助？&lt;/h1&gt;

&lt;p&gt;请提交 issue 到 GitHub，并提供你关于设置的信息。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>